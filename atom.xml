<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>極楽浄土</title>
  
  <subtitle>フロトの理发店 | @AleryXiao</subtitle>
  <link href="https://float0108.github.io/atom.xml" rel="self"/>
  
  <link href="https://float0108.github.io/"/>
  <updated>2023-07-12T16:10:36.478Z</updated>
  <id>https://float0108.github.io/</id>
  
  <author>
    <name>AleryXiao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>蛇香之夜 TBC</title>
    <link href="https://float0108.github.io/Tavg/Sakura/2147552e.html"/>
    <id>https://float0108.github.io/Tavg/Sakura/2147552e.html</id>
    <published>2023-07-12T15:59:57.000Z</published>
    <updated>2023-07-12T16:10:36.478Z</updated>
    
    <content type="html"><![CDATA[<p>换一个新的模式。一边打一边写。</p><ul><li>第一夜 欧洲</li></ul><ol><li>罗斯</li></ol><p>初印象：没有初印象，感觉就是一张还挺帅的脸。初对面就是限制级场合只是钓鱼，（明明游戏只有RankC），没有为人设刻画起到任何的作用。</p><p>打完盘：从铁血的王子殿下到会为国民考虑的王子殿下 + 不知道为什么对女人很尊重很温柔</p><ul><li><p>当无脑恋爱小说看看是可以的，但是一些奇怪的地方没有解释清楚……比如说在一个女人没有话语权的国家怎么培养出来这种男人的啊啊啊啊！！关于女人话语权的设定落地太少了，在后续的难民事件中其实应该可以涉及一下的，可以参考一些目前仍然男女极端不平等的国家的贫民的现状。另外，等女主当王妃了要是能写一写改善女性权益之类的问题也不错吧。（做那种事也不能发出声音的话也太离谱了吧？？？什么一拍脑袋的设定救命）</p></li><li><p>女主你爱上他哪了啊？啊？明明是密探的身份这么恋爱脑我很难代啊！难得写一个魅惑能打的女主角，怎么还是想往一些古早日乙就开始用的模板人设上靠拢啊……对密探身份的强调仅限于店主说不能亲吻这个回忆闪现三次。……挣扎舞女身份相爱也不挣扎密探身份是我没想到的（）你这工作还怪自由嘞。</p></li><li><p>男主人设依然是纸片的厚度，只知道有责任感，对女主很尊重很温柔。哪怕补一点合适的背景介绍都会好很多。从此线看，本作的剧本水平在商业日乙中处平均以下。</p></li></ul>]]></content>
    
    
    <summary type="html">蛇香之夜 TBC</summary>
    
    
    
    <category term="Tavg" scheme="https://float0108.github.io/categories/Tavg/"/>
    
    <category term="Sakura" scheme="https://float0108.github.io/categories/Tavg/Sakura/"/>
    
    
  </entry>
  
  <entry>
    <title>九人安息 9R.I.P.</title>
    <link href="https://float0108.github.io/Tavg/Sakura/2a71d181.html"/>
    <id>https://float0108.github.io/Tavg/Sakura/2a71d181.html</id>
    <published>2023-07-09T15:01:03.000Z</published>
    <updated>2023-07-12T13:26:12.912Z</updated>
    
    <content type="html"><![CDATA[<h2 id="无剧透篇"><a href="#无剧透篇" class="headerlink" title="无剧透篇"></a>无剧透篇</h2><ul><li>简评：非常有趣的怪谈冒险故事</li><li>标签：怪谈/微恐</li><li>推荐：4-/5</li><li>篇幅：中篇</li><li>发售信息：2023.06.29 Otomate NS</li><li>背景（官网自煮，煮得不怎么样）：<blockquote><p>“这个小镇从以前就是神隐事件多发的地方呢。精神脆弱、心怀困扰的人好像容易被偷偷带走呢。你的话没关系吗？”<br>高中二年级的初秋，主人公・逸色珠沙听到亲友这么说，大吃一惊。<br>“神隐什么的、我并不相信所以没有关系。”<br>是的、不相信。只是——确实心怀大大的困扰——关于今后人生的方向选择（進路）。<br>不久她真的听到了令人毛骨悚然的声音。<br>“去寻找你的道路吧。我是、邀请你进入黑暗的存在。”<br>在此之后，她周围开始发生奇妙的事件……</p></blockquote></li></ul><blockquote><p>「この街は昔から神隠しが多い土地でね、精神的に参っていたり、大きな悩みを抱えている人が神隠しにあいやすいの。あなたは<strong>大丈夫？</strong>」<br>高校２年生、秋のはじまる頃。<br>親友にそう言われ、主人公・逸色珠沙は胸をどきりとさせた。<br>「神隠しなんて信じてないから大丈夫」<br>そう、信じてはいない。<br>ただ……大きな悩み――進路のことがあるから戸惑っただけ。<br>そんな彼女の耳に聞こえてくる気味の悪い声。<br>【探しましょう　あなたの道を。僕は　あなたを<strong>闇へ誘う者</strong>】<br>それから珠沙の周りで不思議なことが起こりはじめて……。</p></blockquote><ul><li><strong>注意事项</strong><ul><li>一共分为<strong>四个篇章</strong>（学园怪谈篇、都市怪谈篇、异世界篇、妖篇），每篇有四-五章共通剧情，之后分叉进入角色线，除了妖篇多一个隐藏线角色之外每篇各两个角色。</li><li>就按这个篇章顺序来打也挺好的，不过不按顺序也没关系，篇章之间、角色之间没有明显的依赖关系，<strong>隐藏线角色在其余八个角色全通后解锁</strong>。</li><li>个人建议是晚一点打异世界篇和妖篇。</li><li><strong>学园怪谈的红华线路</strong>是<strong>唯一</strong>包含<strong>微恐</strong>要素的线路，如果担心的话请不要在晚上游玩。</li><li><strong>妖篇</strong>非常非常非常日常，和整本看起来不像在一个游戏（）。（樱花妹推友锐评：あまり日常すぎて、ほかのルートと別つゲームに見えます　。ホラー要素がはぼない。）另外，如果比较在意连贯性的话，建议最后打妖篇，这样可以打完八个角色直接连上隐藏线角色的剧情。</li><li>上推右摇杆有选项/未读文本jump功能。</li><li>女主的性格不太喜欢……优柔寡断的重度逃避癖……受不了女主的话可能会很崩溃</li></ul></li></ul><ul><li><strong>声优表</strong><br>  紅華 くれは (増田俊樹)<br>  響 ひびき (土岐隼一)<br>  香羊 こうよう (鈴木崚汰)<br>  星絆 せな (柿原徹也)<br>  魅ナミ みなみ (岡本信彦)<br>  聖ヤ せいや (立花慎之介)<br>  幸麿 ゆきまろ (KENN)<br>  狐春 こはる (阿座上洋平)<br>  桃嘉 たうか (天﨑滉平)</li></ul><ul><li>总评：<ul><li>非常少见的乙女向素材！<strong>无代餐</strong></li><li>非常有趣的故事和角色们！有很多适当插入的喜剧元素！</li><li>不是那种会让我记好多年的神作（感觉个人线写的<strong>比较简单</strong>，给我触动不多x），但是是挑不出什么大问题而有趣的地方很多的优秀作品。应该在3+ - 4-之间，但是因为无代餐然后足够有趣所以往上打一点。</li><li>值得一玩！期待fd</li></ul></li></ul><h2 id="剧透篇"><a href="#剧透篇" class="headerlink" title="剧透篇"></a>剧透篇</h2><p>心情比较不平静写出来的东西也比较主观x，按角色的顺序，一边写一边吐槽吧。</p><h5 id="珠沙"><a href="#珠沙" class="headerlink" title="珠沙"></a>珠沙</h5><p>整个游戏塑造的<strong>最不讨人喜欢的角色</strong>，好崩溃，一点都代不进去。本来在怪谈向作品里犹豫进路这件事就有点微妙的错位感了，就有点像，呃，人已经快死了还在惦记还没考大学六级，哎呦找不到合适的比喻……主要是我并不理解进路会是那么大的一件事情，或者我觉得女主跟我完全就不是一类人所以完全代不进去。</p><p>女主给我的感觉像是和朋友出去吃饭，啊这个不吃那个不吃问你要吃什么吧你又说啊我还没想好，但是大家都快要饿死了。我的天啊……是多逃避癖能做到快选志愿了一点都没考虑过这个问题，自己一个人考虑不出答案的话她妈妈这样也不奇怪啊，你总得填一个吧那不如填我推荐的好了；而且看到了翼那样强烈的想做什么的愿望，她妈妈实际上也不会强行拦啊。对女主真的好崩溃……你要是我朋友<strong>我非得揍你一顿</strong>再陪你想。哎哟！你怎么不早点想……我的天啊……<strong>桃嘉！你怎么养的孩子啊！（恼）</strong></p><p>所以感觉不到女主除了温柔之外的人格魅力。好崩溃。但是每上来一个男主都说女主惹かれる。<strong>一体どんなところに惹かれたのかよ！</strong> 我可以相信乙女游戏的男主都会无条件的爱女主但是别把女主搞得这么离谱啊……</p><p>另外，妖篇的女主更是……嘛，如果我是sayaka你的热爱怪异现象的好亲友我肯定好难过。我的天啊这么大的事情你真的一点都不愿意跟你亲友说……你也没问桃嘉能不能说啊，你就是完全没打算跟她说……好难过。</p><h4 id="校园怪谈"><a href="#校园怪谈" class="headerlink" title="校园怪谈"></a>校园怪谈</h4><p>四篇里认为完成度最高也最贴合题目的（废话，毕竟是官配线x），因为先玩了妖对这个游戏期待大幅降低再玩这个有一种怀疑剧本娘是为了红华这个醋包了饺子的感觉，后来发现除了妖篇每一篇都很9rip。</p><h5 id="红华"><a href="#红华" class="headerlink" title="红华"></a>红华</h5><p>个人线主要话题：第八朵彼岸花=第八个校园怪谈的调查 &lt;-&gt; 长发女鬼的诅咒 &lt;-&gt; 红华失去的记忆</p><p>真正的官配，每个线里都露脸（），他真的好爱珠沙（虽然理由不明）。温柔的善良的会怕鬼故事的幽灵帅哥谁不爱啊！角色本身就超级萌！</p><p>而且我太喜欢优衣了！（你肩膀上好像有什么东西！（凑近）不许对她抱有恋爱方面的想法，阻碍她回到原来的世界去）呜呜呜，优衣她好爱我啊。</p><p>真相能猜到一点但是不多，真的好惨啊。雏菊……T T</p><p>中间包含我最喜欢的一个结局，怪异再临，就是女主能看到所有怪异现象的那个结局。和大家都保持朋友关系想想都很开心！</p><h5 id="響"><a href="#響" class="headerlink" title="響"></a>響</h5><p>个人线主要话题：響升天？ &lt;-&gt; 響的执念</p><p>病娇幽灵弟弟&gt;&lt; 拥有一个镜子的世界！这里的故事其实比红华简单很多，主要就是女主和響进行拉——扯——，然后響和自己进行拉——扯——。倒不如说在所有幽灵故事里成佛都是必不可缺的话题，这里其实和星绊的故事有点共通之处。</p><p>喜欢病娇的话应该会很喜欢！</p><h4 id="都市怪谈"><a href="#都市怪谈" class="headerlink" title="都市怪谈"></a>都市怪谈</h4><p>故事性上不如校园怪谈，不如说之后的故事都没有什么“悬疑”的地方了，只是单纯的解开心结、解决事件而已，而由于这是个篇幅在正常范围内的乙女游戏作品、划分了八个路线加隐藏线，每个线路都不长而且物理时间应该都是九天，所以能讲的故事的复杂性也比较低。最复杂的故事莫过于红华了。</p><h5 id="香羊"><a href="#香羊" class="headerlink" title="香羊"></a>香羊</h5><p>个人线主要话题：地雷女！</p><p>感情线路写的显著比别的线路仓促。应该说香羊太忙了，需要考虑的事情太多，又是自己的失忆幼驯染，又是自己的跟踪狂地雷女，又是让人不省心的女主角。……基本上来不及爱啊！女主很伤心陪着看个电影那也不是爱情的方向吧（？）我刚回收完香羊结果了地雷女打算去HO干活的结局没多久，两个人就进了地狱，然后也没发生什么事件就进入谈情说爱阶段了……啊？？啊？？香羊什么时候爱上女主的来着？往前翻香羊视角还是在操心基友操心地雷女嘞。或者说他其实早就爱上女主角只是他说话一直就这个调调。那也还行吧。我觉得多补一点香羊视角会好一点呢……</p><p>而且香羊是生魂什么的真的是一点铺垫也没有啊。……可能我没看到吧……好突然的good end……</p><p>另外，你们HO管理真的好低下啊救命……</p><h5 id="星绊"><a href="#星绊" class="headerlink" title="星绊"></a>星绊</h5><p>个人线主要话题：不想分开……</p><p>这一线路也是拉扯拉扯拉扯。星绊也是个死脑筋。后面一直在纠结两个人要分开的问题，和妖篇差不多，后来是靠勾玉存能量。最大的事件是为了要见面进了镜子，结果響失控了，硬解镜子需要勾玉里的能量但是不够……</p><p>所以妖篇老头做一次法原来值那么多能量啊，够女主看到几个妖好久嘞，这次怎么只能牛郎织女。好崩溃……女主要不要去修仙试试呀。（？）这样恋爱和事业问题一次解决嘞。</p><h4 id="异世界"><a href="#异世界" class="headerlink" title="异世界"></a>异世界</h4><p>我最喜欢的一篇！！！啊啊啊啊！主要是角色设定都太有趣了！</p><h5 id="圣夜"><a href="#圣夜" class="headerlink" title="圣夜"></a>圣夜</h5><p>个人线主要话题：解决米纳米&gt;&lt;</p><p>变态乙女脑，这不是我吗！（？）在别的线路出镜率也超级高，到处以我的视角姨母笑（嘿嘿嘿）。有这种很平易近人的无伤大雅的小爱好我很喜欢！工作服的白手套和眼睛印花大大大好。（女主寄掉的结局有工作服ver珠沙，两个人站在一起好好好般配！）</p><p>很爱女主但是给女主很多很多的自由。特别好的恋人T T。</p><p>最帅的是那张亲女主赶走地雷女灵魂然后举枪的cg，草，帅的我凝固了好几秒。明明可以当冷酷工作狂帅哥但是是个变态乙女脑，这是何等新鲜大胆的人设（），不过我好喜欢啊啊啊。感觉能一起完乙女游戏……上一个乙女脑还是伊尔，但是两个人是完全不一样的方向……都好可爱！</p><h5 id="魅ナミ"><a href="#魅ナミ" class="headerlink" title="魅ナミ"></a>魅ナミ</h5><p>个人线主要话题：解决米纳米非要女主灵魂和喜欢女主的矛盾 &lt;-&gt; 为什么米纳米非要女主的灵魂不可 &lt;-&gt; 怎么解决</p><p>情节复杂性很合适，甜度也很好&gt;&lt;</p><p>这个话题还挺好玩的，女主认识的米纳米其实已经部分和肚子里的灵魂渗透了，米纳米肚子里那个现在是坏种嘞嘿嘿。（？）所以米纳米的自我认知也很有意思，但是我不想讨论这个，感觉会很麻烦。整个过程非常的甜，就是那种很别扭的喜欢，不知道该怎么办不想被吞噬掉但是又不想杀掉女主所以在车站逼迫女主把性命都送到女主受伤，明明很讨厌karifa花但是为了女主努力地忍受了。在这条线的圣夜也相当温柔T T。（顺带一提是唯一上垒的线路……啊啊啊，居然是那种魔！好可爱的设定，呜呜呜）</p><h4 id="妖篇"><a href="#妖篇" class="headerlink" title="妖篇"></a>妖篇</h4><p>这里都没有什么主要话题可言了，基本上就是女主角作为一个普通的担忧进路的高中生，然后和家里人拉扯之类的。这个事情结束以后就是解决能不能和喜欢的妖在一起的问题……</p><p>另外，所谓妖怪不能干涉人类世界的“常规”也很诡异，明明像红皮书和こっくり的存在就是对人类世界的干涉啊，而且几个妖怪也天天变成人和女主乱逛，结果女主做法的效力一到期，几个妖怪都乖乖退场了，这算什么事啊（胃痛），多说两句话怎么了啊啊啊啊。……</p><h5 id="幸麿"><a href="#幸麿" class="headerlink" title="幸麿"></a>幸麿</h5><p>个人线主要话题：解决女主进路问题 -＞　　　 解决男主要去做下一个工作的问题以及和女主将会看不见他的问题</p><p>第一条打的所以现在已经记不清楚了……，过于日常而感觉非常无聊，找不到特别的记忆点……男主的立绘和人设都很<strong>可爱</strong>，男主的特殊语癖很有意思，但是剧情自身比较单调，矛盾比较简单和胃痛。再加上回到日常以后，女主身上的优柔寡断之类的地方更加明显了，对女主的代入感也很差。</p><h5 id="狐春"><a href="#狐春" class="headerlink" title="狐春"></a>狐春</h5><p>个人线主要话题：解决女主进路问题 -＞　　　 加强一下对他工作的认可感 -&gt; 解决两个人要分开的问题</p><p>靠谱成年男性（点头）。</p><p>这里结局算是最胃痛的好结局之一，每天散步九分钟是吧，哎呦，胃痛的要死。另外觉得难受的就是怎么存在这种只有好处没有坏处的机制啊，（こっくり和红皮书之类的，）简直就是童话啊啊啊啊啊，完全不是怪谈吧喂喂，……关于こっくり的这个工作具体也解释得不是很清楚嘞，他的答案是哪里来还是在别的线里我才知道他是因为这个工作会直到问题的答案什么的，但是这样女主不是可以一直召唤他作弊来着（？）</p><p>另外，好贤惠啊，喜欢贤惠的！</p><h5 id="桃嘉"><a href="#桃嘉" class="headerlink" title="桃嘉"></a>桃嘉</h5><p>哎呦成人形态帅死了呀！！呜呜呜。平时原来设定是12岁的样子嘛。这里算是把整个游戏的线索串起来啦！关于桃嘉本身，下面再说。</p><hr><h5 id="做一个简单的梳理"><a href="#做一个简单的梳理" class="headerlink" title="做一个简单的梳理"></a>做一个简单的梳理</h5><ol><li><p><strong>真相</strong>相关：女主-米纳米-桃嘉<br> 女主一出生就拥有纯净无暇的灵魂<br>  &lt;- 梦魔<strong>米纳米</strong>无法压制吸收的契约对象的类似灵魂，急需对冲以免“失去自己”，盯上女主<br>  &lt;- 赋予人灾难以使人成长的神<strong>桃嘉</strong>被女主的“灾难成长论”感动<br> 死神会杀死被恶魔盯上的人，以免对方遭受痛苦（？？？）<br> 桃嘉阻止了死神，以仅留下能够保护女主的力量作为代价向死神承诺会陪伴女主直到她心灵强大<br>  &lt;- 对桃嘉来说，让人强大的方法就是给人以灾难（。）<br>  -&gt; 女主一直多灾多难的。17岁是桃嘉和恶魔约定的检测女主心灵强大的检查点，所以发生了这个故事。</p></li><li><p><strong>神隐事件</strong>相关：红华-響<br> 七十多年前，月神优衣由于父亲过度的控制欲选择通过找齐学园七大不可思议神隐，而其父走向疯狂的境地，用残忍的方式杀害（献祭）了无辜的人。<br> -&gt; 红华的妹妹（和一个少年）都是在月神家打工，被幽禁等待献祭日。红华找到妹妹的时候正在妹妹被献祭的关头，他和妹妹双双命陨地下室，他死后即因为极大的仇恨恶灵化，执念的刀是杀害他与妹妹的刀。妹妹为了换回哥哥清醒的意识、想要拯救红华让他成佛，选择了扩大心中的仇恨、用仇恨的力量诅咒月神爹，此后成为了恶灵；而红华不久后清醒，失去了这段记忆。<br> -&gt; 響也是其中一个受害者。一直等待着月神爹从地狱放出来之后进行复仇的他，在圣夜的帮助下居住在学校的镜子里。这个镜子的世界也减少他受到其它幽灵的刺激，避免恶灵化。</p></li><li><p>こっくり相关：響-狐春<br> 響以前是一个孤独的少年的时候经常向こっくり请求答案，在一次意外中狐春因为保护他伤了一只眼睛。狐春给了響变强的祝福和信念。</p></li><li><p>蕾卡相关：香羊-雷卡-圣夜<br> レイカ一直跟踪恐怖博主香羊，扭曲的爱以两人陷入火场暂结。圣夜作为地狱HO大审判官负责管理レイカ（但是レイカ还是失控了）。</p></li><li><p>星绊相关：星绊-響<br> idol和崇拜idol的幽灵粉丝（）</p></li></ol><p>这应该就是主要的线间联系了，容易看出游戏里最<strong>想着重描绘的还是女主事件圈和神隐事件圈</strong>，而神隐事件应该说是最能够点题9RIP的部分（甚至会让人觉得是为醋包饺子的程度）。个人认为9RIP的这条线（神隐事件）也就是<strong>红华线</strong>是整个游戏在剧情上完成度最高的，然后就是在<strong>米纳米线</strong>上的情感叙事的完成度最高（米纳米在想要保有自己的存在和对女主的爱之间天然存在对立）。</p><p><strong>桃嘉线</strong>笔墨稍轻了，作为给与灾厄以使人成长的这个想法本身是很难让正常人类的玩家共情的，尤其在经历前面很多线的be之后（可以说桃嘉给与的很多灾厄是完全不可控的），而桃嘉的爱也是有点不太好理解的。……从概念上我知道他是爱女主想让女主更厉害给女主灾厄。或者你说女主本来就已经死了，如果桃嘉不让她变强一点她还是会被死神收走，好吧，我也能接受。……但是感谢让你吃苦让你成长的对象这种想法还是不太自然……</p><p>而且女主在桃嘉的培养下为什么看起来还是那么逃避癖啊（摔）！关于桃嘉的结论就是成人状态还挺帅的，没了。</p><p>另外，关于本游戏很想坚持的一点，人和怪异之间应该存在的壁垒，这点还是值得感动一下的，比较真实（。）虽然我主观上觉得女主最好进路还是去修仙。</p><p>可是其实没有很落实到世界观上，妖和神明明都在积极干预人类的世界啊！！恶魔那么自由，想抓哪个人类抓谁，死神要杀人换自由，好吧，你死神还不如人类驱魔师嘞，不能解决恶魔解决被恶魔盯上的人是吧，行吧；然后天狗神来干预死神，不能让她死掉。こっくり会给迷茫的人答案；红皮书真的会实现别人的愿望；几个妖怪天天化人形配女主压马路，还去跟她家长谈话……你们这个干涉的限度指的是啥啊？感觉还不如干脆修仙世界观得嘞。一个人妖（或者别的）殊途的矛盾点用了好几个线路，胃都痛麻了，感觉就像隔壁君雪看本不该有感情的奇虚获得感情一百次。好吧，也不是大问题，是我比较挑剔。（当然，如果能解决这个重复使用的矛盾点，剧情会更丰富有趣）。</p><h3 id="总评"><a href="#总评" class="headerlink" title="总评"></a>总评</h3><p>故事上确实还是有很多提升空间的。不过作为极少见的怪谈向乙女故事，还是值得体验一下的！目前基本可以说没有代餐。</p><p>人设都还是非常有趣的！一包九个人，应该也总有几个能进好球区的吧？至少，对我来说，没有一个让我看一眼就不想攻略的角色（。）不如说每一个我都挺喜欢！现在的好感度大概是：米纳米 &gt; 圣夜 &gt; 红华 ≈ 香羊 &gt; 其它。作为老牌乙女游戏厂商的O社在人设和恋爱剧情上的拿捏还是值得肯定的，除了香羊因为需要操心的事情太多在感情线的描写上有点跳步、全员都对感觉不怎么有特点的女主有初始好感度尤其是红华之外，趣味性和糖度都还是不错的！</p><p>音乐非常好听！每个角色的角色曲一响我都会爱上角色和角色曲的程度！都很贴合角色。恐怖故事必备的那首听多了也没那么恐怖了哈哈哈。美术和UI也看得出用心，（虽然觉得女主画得有点成熟），视点转换页非常精致（居然闺蜜也有哈哈哈），对话框的枝条非常漂亮（中左处感觉也可以不要画那么多，那里不会出现文字、有点无意义地挡中间视野），界面里的精致的怪异感也特别。</p><p>对我个人来说，是玩的过程觉得挺愉快不过可能不会留下太多印象的作品，可能记得最深的就是神隐事件和女主事件两个主要故事吧。但是快乐也很足够了！至少它给了一种和别的作品不一样的快乐的体会。</p>]]></content>
    
    
    <summary type="html">4-/5 非常有趣的怪谈冒险故事</summary>
    
    
    
    <category term="Tavg" scheme="https://float0108.github.io/categories/Tavg/"/>
    
    <category term="Sakura" scheme="https://float0108.github.io/categories/Tavg/Sakura/"/>
    
    
  </entry>
  
  <entry>
    <title>坏苹果战争BadAppleWars TBC</title>
    <link href="https://float0108.github.io/Tavg/Sakura/c016b4d5.html"/>
    <id>https://float0108.github.io/Tavg/Sakura/c016b4d5.html</id>
    <published>2023-07-03T02:01:03.000Z</published>
    <updated>2023-07-09T05:11:03.804Z</updated>
    
    <content type="html"><![CDATA[<h2 id="无剧透篇"><a href="#无剧透篇" class="headerlink" title="无剧透篇"></a>无剧透篇</h2><ul><li>简评：3/5 设定有趣美术优秀不过实现上很平庸的作品</li><li>标签：校园</li><li>推荐：3+/5</li><li>篇幅：中篇</li><li>背景（无剧透）：<blockquote><p>正在反思着自己的空空的心走向入学式的少女在一场车祸后来到了一个奇异的学园。在这里，存在着极大量繁琐的&lt;校规&gt;，学生们分为三派：好孩子、坏孩子和风纪委员。遵守校规的好孩子们会渐渐失去记忆、失去自己，戴上无法区分彼此的面具，在某个时间就会迎来“毕业”（转生）；坏孩子们自称“bad apples”，试图打破特殊的七条校规以迎来“退学”，猜测“退学”即是生还——回到原来的世界；而风纪委员是校规的维护者，本身不受校规束缚，也不会接受“毕业”判定。<br>少女会做出什么样的选择呢？</p></blockquote></li></ul><ul><li>总评：<ul><li>配角刻画比主角还精细…（ナラか サンズ 都好喜欢！）</li><li>个人认为不太能自圆其说</li><li></li></ul></li></ul><h2 id="剧透篇"><a href="#剧透篇" class="headerlink" title="剧透篇"></a>剧透篇</h2><h3 id="1-简单来说"><a href="#1-简单来说" class="headerlink" title="1. 简单来说"></a>1. 简单来说</h3><p>设定很有趣，没有很接近的代餐，</p><h3 id="2-写写想写的"><a href="#2-写写想写的" class="headerlink" title="2. 写写想写的"></a>2. 写写想写的</h3><h3 id="3-关于少女们与救赎的歌谣"><a href="#3-关于少女们与救赎的歌谣" class="headerlink" title="3. 关于少女们与救赎的歌谣"></a>3. 关于少女们与救赎的歌谣</h3>]]></content>
    
    
    <summary type="html">3/5 设定有趣美术优秀不过实现上很平庸的作品</summary>
    
    
    
    <category term="Tavg" scheme="https://float0108.github.io/categories/Tavg/"/>
    
    <category term="Sakura" scheme="https://float0108.github.io/categories/Tavg/Sakura/"/>
    
    
  </entry>
  
  <entry>
    <title>致命十二人 Fatal12</title>
    <link href="https://float0108.github.io/Tavg/Flos/c86c057f.html"/>
    <id>https://float0108.github.io/Tavg/Flos/c86c057f.html</id>
    <published>2023-06-27T03:30:25.000Z</published>
    <updated>2023-07-11T09:52:56.576Z</updated>
    
    <content type="html"><![CDATA[<h2 id="无剧透篇"><a href="#无剧透篇" class="headerlink" title="无剧透篇"></a>无剧透篇</h2><ul><li>简评：3+/5 有巧思但是实现上稍显不足的（伪）大逃杀</li><li>标签：百合/校园</li><li>推荐：3+/5</li><li>篇幅：短篇（15h±）</li><li>背景（无剧透）：<blockquote><p>不受欢迎的普通女高中生狮子火凛舞做了一个奇怪的“梦”，梦里她经历了一场电车爆炸事件。在接下来的几天，连续有意义不明的梦境拜访。在这个周日，她在梦中踏入了一个满是齿轮的世界，见到了白发的较小的女神，女神说在此的十二人其实都是已死之人，而接下来的十二周将开展一场命运的游戏，通过获得某人的三条信息：姓名、死因与留恋，即可“指名”他、让他出局；获胜者将会保持现在的状态活下去，而失败者在此期间的一切行为都会被撤销，回归游戏开始前已经死去的命运。同样让她惊讶的是，她的好友，海晴也正与她同样站在命运的大厅，参与这个荒谬的游戏……</p></blockquote></li></ul><ul><li>注意事项：<ul><li>壁垒：女主在前半剧情都是完全的优柔寡断圣母（）</li><li>菜单界面可以查看非常详细的每日剧情提要和角色的卡牌信息！</li></ul></li></ul><ul><li>总评：<ul><li>虽然有点大逃杀的意思，但是并没有很强调这一点，不如说更倾向于一个喜剧（？）</li><li>需要描写的角色很多、这类题材对角色的刻画要求也比较高，所以难免有照顾不太周到的地方</li><li>能完善的地方很多，但是故事本身还是很有趣的！</li></ul></li></ul><h2 id="剧透篇"><a href="#剧透篇" class="headerlink" title="剧透篇"></a>剧透篇</h2><p>拖得有点久了，剧情细节记不太清了，凭印象留下一点repo吧。</p><ul><li>非常讨巧的设定，让游戏不容易变得太沉重。怎么说呢，“一群活人争夺唯一活下去的机会”意味着“杀死”剩余的人，而“一群死人争夺唯一复活的机会”就听上去没那么残忍了，甚至有点尊重他人命运的意思。</li><li>命运可以说是本作的一个大主题。世界观里。两代人的命运（凛火和女神前身），一下子给游戏</li></ul><ul><li><p>大逃杀类的题材其实对角色以至人性的描写的要求非常高（不然就会变成砍瓜切菜游戏），因为在这种情况下的人是特别的、少见的，描绘他们在紧迫情况下的样子和他们曾经的样子会给与玩家特殊的共情体验。而日常类的题材则只需要有趣，因为这类人和他们的状态、发生的事件都是比较普通语境下的、容易理解和共情的。直接说的话，本作没有达到前者的预期，不过比起纯粹的日常向还是多一点非日常语境下会产生的趣味。</p></li><li><p>对于圣母系女主角凛火</p></li></ul><p><strong>全通纪念</strong></p><p><img src="../../../assets/Pasted%20image%2020230711173559.png" alt=""></p>]]></content>
    
    
    <summary type="html">3+/5 有巧思但是实现上稍显不足的（伪）大逃杀</summary>
    
    
    
    <category term="Tavg" scheme="https://float0108.github.io/categories/Tavg/"/>
    
    <category term="Flos" scheme="https://float0108.github.io/categories/Tavg/Flos/"/>
    
    
  </entry>
  
  <entry>
    <title>网易雷火0422游戏研发2飞机题解</title>
    <link href="https://float0108.github.io/Codes/d4872b1e.html"/>
    <id>https://float0108.github.io/Codes/d4872b1e.html</id>
    <published>2023-04-22T09:27:05.000Z</published>
    <updated>2023-04-22T10:01:55.329Z</updated>
    
    <content type="html"><![CDATA[<p>觉得有空应该好好学一学DP…<br>↓一个有点繁琐的工程题，呜呜，很好，我最喜欢工程题了！<br>第三题第四题感觉希望不大遂美美写了个漂亮结构用于自我欣赏（</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">outJob</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="type">int</span> ID = <span class="number">-1</span>;  <span class="comment">//-1 for invalid</span></span><br><span class="line">    <span class="type">int</span> planeNum = <span class="number">0</span>;</span><br><span class="line">    <span class="type">bool</span> working = <span class="number">1</span>;  <span class="comment">// 1 for out, 0 for sleep</span></span><br><span class="line">    <span class="built_in">outJob</span>() &#123;&#125;</span><br><span class="line">    <span class="built_in">outJob</span>(<span class="type">int</span> id, <span class="type">int</span> NUM) : <span class="built_in">ID</span>(id), <span class="built_in">planeNum</span>(NUM), <span class="built_in">working</span>(<span class="number">1</span>) &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">jobQueue</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    outJob data[<span class="number">30000</span>];</span><br><span class="line">    <span class="type">int</span> head = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> tail = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">enqueue</span><span class="params">(outJob x)</span> </span>&#123; data[tail++] = x; &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">dequeue</span><span class="params">()</span> </span>&#123; head++; &#125;</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> (tail == head); &#125;</span><br><span class="line">    <span class="function">outJob* <span class="title">queuehead</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> &amp;data[head]; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">switchJob</span><span class="params">(<span class="type">int</span> id)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = head; i &lt; tail; i++)</span><br><span class="line">            <span class="keyword">if</span> (id == data[i].ID)</span><br><span class="line">                data[i].working = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">clearJob</span><span class="params">()</span>  <span class="comment">// return sum</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> tmp = <span class="number">0</span>, i;</span><br><span class="line">        <span class="keyword">for</span> (i = head; i &lt; tail; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (data[i].working)</span><br><span class="line">            &#123;</span><br><span class="line">                head = i;  <span class="comment">// i&lt;index 全部出队 改变队头</span></span><br><span class="line">                <span class="keyword">return</span> tmp;</span><br><span class="line">            &#125;</span><br><span class="line">            tmp += data[i].planeNum;</span><br><span class="line">        &#125;</span><br><span class="line">        head = i;</span><br><span class="line">        <span class="keyword">return</span> tmp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> c, n, okplanes;</span><br><span class="line">jobQueue waitingList, outJobList;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">tryOut</span><span class="params">(outJob x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> id = x.ID, num = x.planeNum;</span><br><span class="line">    <span class="comment">// printf(&quot;--try out ID = %d, NUM = %d--\n&quot;, id, num);</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> newOut = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// printf(&quot;OKplanes = %d, Cplanes = %d\n&quot;, okplanes, c);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (num &lt;= c)  <span class="comment">// 要派出去的&lt;=总数</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (num &lt;= okplanes)  <span class="comment">// 也&lt;=可用数</span></span><br><span class="line">        &#123;</span><br><span class="line">            okplanes -= num, newOut = num;</span><br><span class="line">            outJobList.<span class="built_in">enqueue</span>(x);</span><br><span class="line">            <span class="comment">// printf(&quot;Outjob: %d, %d\n&quot;, id, num);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>  <span class="comment">// 要派出去的&gt;总数</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (okplanes == c)  <span class="comment">// == 可以升级</span></span><br><span class="line">        &#123;</span><br><span class="line">            c = num, okplanes = <span class="number">0</span>, newOut = num;</span><br><span class="line">            outJobList.<span class="built_in">enqueue</span>(x);</span><br><span class="line">            <span class="comment">// printf(&quot;Upgrade&amp;Outjob: %d, %d\n&quot;, id, num);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// if (!newOut)</span></span><br><span class="line">    <span class="comment">// printf(&quot;After: OKplanes = %d, Cplanes = %d\n&quot;, okplanes, c);</span></span><br><span class="line">    <span class="keyword">return</span> newOut;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (~<span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;c, &amp;n))</span><br><span class="line">    &#123;</span><br><span class="line">        okplanes = c;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> newOut = <span class="number">0</span>;</span><br><span class="line">            <span class="type">int</span> a, b;  <span class="comment">// a是指令类型，b是指令内容 &gt;1(id) + num or -1 + id</span></span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">            <span class="function">outJob <span class="title">newJob</span><span class="params">(a, b)</span></span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (a &gt;= <span class="number">0</span>)  <span class="comment">// 派遣任务,编号为a,派遣b台无人机</span></span><br><span class="line">            &#123;</span><br><span class="line">                newOut = <span class="built_in">tryOut</span>(newJob);</span><br><span class="line">                <span class="keyword">if</span> (!newOut)</span><br><span class="line">                    waitingList.<span class="built_in">enqueue</span>(newJob);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>  <span class="comment">// 召回任务</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// printf(&quot;--try back ID = %d--\n&quot;, b);</span></span><br><span class="line">                outJobList.switchJob(b);            <span class="comment">// 转换为休眠状态</span></span><br><span class="line">                okplanes += outJobList.<span class="built_in">clearJob</span>();  <span class="comment">// 唤醒连续休眠飞机</span></span><br><span class="line">                <span class="comment">// 检查派遣队列</span></span><br><span class="line">                <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (waitingList.<span class="built_in">isEmpty</span>())</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="type">int</span> tp = <span class="built_in">tryOut</span>(*waitingList.<span class="built_in">queuehead</span>());</span><br><span class="line">                    <span class="keyword">if</span> (tp == <span class="number">0</span>)  <span class="comment">// 派遣失败</span></span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    newOut += tp, waitingList.<span class="built_in">dequeue</span>();  <span class="comment">// 派遣成功</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, newOut);</span><br><span class="line">            <span class="comment">// printf(&quot;---------\n&quot;);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">主打一个美观</summary>
    
    
    
    <category term="Codes" scheme="https://float0108.github.io/categories/Codes/"/>
    
    
    <category term="cpp" scheme="https://float0108.github.io/tags/cpp/"/>
    
  </entry>
  
  <entry>
    <title>群晖docker部署code-server</title>
    <link href="https://float0108.github.io/Engineer/262484b2.html"/>
    <id>https://float0108.github.io/Engineer/262484b2.html</id>
    <published>2023-03-10T12:42:08.000Z</published>
    <updated>2023-03-11T17:53:42.715Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>为了更好地使用，或许需要调试用的设备连接SSH。</p><ol><li>在设置中打开SSH功能（默认端口号为22）</li><li>在windows terminal内 输入 <code>SSH &#123;user name&#125;@&#123;IP&#125;:22</code></li><li>选择yes，并输入密码（不会明文在控制台显示）</li><li>控制台的前缀改变，变为{username}@{设备名}，即为连接成功。通用的linux指令可以进行操作，sudo指令可获取管理员权限</li></ol></li><li><p>下载code-server映像</p></li></ol><p>官方接口的链接似乎已经失效。可以自行下载后上传至群晖。<br>``</p><ol><li><p>通过SSH/群晖docker-GUI来指定端口和环境变量等</p><ol><li>端口 8080:8080 TDP （容器默认端口为8080，本地端口只要不冲突都可以用）</li><li>打开自动重启</li><li>环境变量（不配置PUID和PGID，通过直接修改文件权限虽然不安全但是能用）<br> PUID=1000<br> PGID=1000<br> TZ=Asia/Shanghai<br> PASSWORD={password}<br> *如何查找PUID和PGID：连接SSH，<code>cat /etc/passwd</code>查看对应用户行的两个编号</li><li>文件映射<br> 必须要映射的只有config。找个地方分配一个文件夹就好了。<br> <code>&#123;your dir&#125; : /home/coder/.config</code><br> 工作区文件夹也可以随便映射。<br> <code>&#123;your dir&#125; : /home/project</code></li></ol></li><li><p>访问对应IP并输入密码即可登入<br> 第一次打开网页会出现一个密码输入框，输入即可。<br> 密码：初始密码可以用你喜欢的方法从映射的.config文件夹获取<br> SSH命令行的一种方法</p><pre><code> `docker exec -it code-server bash` `vi ~/.config/code-server/config.yaml`</code></pre><p> 群晖访问、下载、打开</p><pre><code> ...</code></pre></li><li><p>其它的可能出现的问题：</p><ol><li><p>只能读取文件，不能修改：</p><pre><code>与群晖的文件读写权限设置有关。一个粗暴但是不安全的方法：连接群晖SSH，直接修改project文件夹的权限`chmod 777 -R &#123;Your dir&#39;s name&#125;`</code></pre></li><li><p>无法安装vscode扩展</p><pre><code>好像就是不能直接从扩展商店安装（对我只有中文插件成功了）可以从扩展商店访问对应扩展的页面并且获取对应版本的链接，下载`.vsix`文件并手动安装</code></pre></li></ol></li><li><p>关于Cpp环境配置：<br> 依次执行（SSH连接）<br> <code>sudo apt-get update</code><br> <code>sudo apt-get install build-essential gdb</code><br> 此时可以安装C插件和code-runner快乐编码了</p></li><li><p>关于python等环境配置</p></li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//切换 root 用户</span><br><span class="line">sudo su</span><br><span class="line"></span><br><span class="line">//更新源</span><br><span class="line">sed -i &quot;s/archive.ubuntu.com/mirrors.aliyun.com/g&quot; /etc/apt/sources.list &amp;&amp; apt update</span><br><span class="line"></span><br><span class="line">//安装 python</span><br><span class="line">apt install -y python</span><br><span class="line"></span><br><span class="line">//安装 nodejs，自行调整版本</span><br><span class="line">curl -sL https://deb.nodesource.com/setup_14.x | sudo bash</span><br><span class="line">apt install -y nodejs</span><br><span class="line"></span><br><span class="line">//安装 jdk</span><br><span class="line">apt install -y openjdk-8-jdk</span><br></pre></td></tr></table></figure><p>最好选用<a href="https://github.com/microsoft/vscode-python/releases?q=2019&amp;expanded=true">19年以前</a>，最新版本的python插件并不兼容</p><p>`</p><ol><li>可以选择更改docker权限</li></ol><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">chmod a+rw /run/docker.sock # 或者 chmod a+rw /var/run/docker.sock</span><br></pre></td></tr></table></figure><p>即可在docker的terminal内使用sudo指令</p>]]></content>
    
    
    <summary type="html">今天上课moonlight竟然断了，好绝望，或许还是要有个后手才比较好……</summary>
    
    
    
    <category term="Engineer" scheme="https://float0108.github.io/categories/Engineer/"/>
    
    
    <category term="linux" scheme="https://float0108.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>WSL2环境配置</title>
    <link href="https://float0108.github.io/Engineer/b1be395e.html"/>
    <id>https://float0108.github.io/Engineer/b1be395e.html</id>
    <published>2023-02-15T09:15:44.000Z</published>
    <updated>2023-04-04T00:19:32.675Z</updated>
    
    <content type="html"><![CDATA[<ul><li>注意：功能需要hyper-v，与现下绝大多数的模拟器软件冲突</li></ul><h3 id="1-程序和功能添加（需要重启）"><a href="#1-程序和功能添加（需要重启）" class="headerlink" title="1. 程序和功能添加（需要重启）"></a>1. 程序和功能添加（需要重启）</h3><p>控制面板-程序-启用或关闭windows功能，勾选“适用于Linux的Windows子系统“ 和 “虚拟机平台”</p><h3 id="2-配置WSL"><a href="#2-配置WSL" class="headerlink" title="2. 配置WSL"></a>2. 配置WSL</h3><p>设置WSL2为默认内核，更新WSL并重启WSL服务</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wsl --set-default-version 2</span><br><span class="line">wsl --update</span><br><span class="line">wsl --shutdown</span><br></pre></td></tr></table></figure><h3 id="3-下载Ubuntu"><a href="#3-下载Ubuntu" class="headerlink" title="3. 下载Ubuntu"></a>3. 下载Ubuntu</h3><p>在应用商城搜索Ubuntu并下载安装对应版本，之后打开即可。<br>（在Windows terminal中，现在在+中也可以添加ubuntu终端了，界面非常漂亮）</p><p>按照提示输入用户名和密码（不需要和windows系统相同。密码输入不会回显）</p><h3 id="4-（可选）映射网络驱动器"><a href="#4-（可选）映射网络驱动器" class="headerlink" title="4. （可选）映射网络驱动器"></a>4. （可选）映射网络驱动器</h3><p>此电脑-映射网络驱动器，文件夹填<code>\\wsl$\Ubuntu-20.04</code>（-对应的版本号，可以先在文件资源管理器进入<code>\\wsl$</code>进行确认）</p><p>不要映射也挺好的，可以在文件资源管理器固定一个快速访问。</p><p><strong>注意！</strong> 这个文件夹只有在ubuntu运行时才能打开。</p><h3 id="5-Vscode配置wsl2终端"><a href="#5-Vscode配置wsl2终端" class="headerlink" title="5. Vscode配置wsl2终端"></a>5. Vscode配置wsl2终端</h3><p>Vscode在插件市场搜索WSL（蓝底白字小企鹅图标）安装，之后侧边栏会出现“远程资源管理器”，点进去新建窗口即可。</p><p>可以先在Ubuntu建立一个工作文件夹、在Vscode中打开。</p><p>要运行代码，需要相应地配置Ubuntu代码环境和Vscode（远程）插件。</p><p>例如：C/C++</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install gcc</span><br><span class="line">sudo apt install build-essential</span><br></pre></td></tr></table></figure><p>如果中途出现Y/N选项，输入Y即可。</p><p>用<code>gcc --version</code>检查安装是否成功。</p><p>在Vscode中，也安装C/C++插件（这里的安装和本地vscode是不互通的！而是在工作区目录下新建.vscode文件夹）</p><p>现在，点击运行和调试均可正常运行了！</p><h3 id="6-其它"><a href="#6-其它" class="headerlink" title="6. 其它"></a>6. 其它</h3><ul><li><code>/mnt</code> 是windows磁盘在wsl中的映射</li></ul><h3 id="7-linux代码环境配置"><a href="#7-linux代码环境配置" class="headerlink" title="7. linux代码环境配置"></a>7. linux代码环境配置</h3><ul><li>安装包的过程中出现<code># The following packages have unmet dependencies</code></li></ul><p><a href="https://blog.csdn.net/qq_41566366/article/details/121244177">解决办法</a></p><p>先执行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get clean</span><br><span class="line">sudo apt-get autoremove</span><br></pre></td></tr></table></figure><p>如果不行再执行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt --fix-broken install    //修复系统中已安装的软件包依赖关系的错误，尝试下载并安装缺失的依赖软件包，并解决其他软件包冲突问题。</span><br><span class="line"></span><br><span class="line">sudo apt-get update &amp;&amp; sudo apt-get upgrade //这会更新所有软件到最新版本，建议不要使用</span><br><span class="line"></span><br><span class="line">sudo dpkg --configure -a  //重新配置未成功安装的软件包。</span><br><span class="line"></span><br><span class="line">sudo apt-get install -f    //修复已安装的软件包依赖关系错误。当某些软件包在安装或卸载过程中出现问题时，可能会导致软件包依赖关系错误，此时可以执行该命令以修复依赖关系错误。需要注意的是，该命令并不会安装新的软件包，它只会修复已安装的软件包依赖关系错误。如果需要安装新的软件包，应该使用 sudo apt-get install</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>安装包的过程中出现<code>Failed to fetch http://security.ubuntu.com/ubuntu/pool/main/b/binutils/binutils-common_2.30-21ubuntu1~18.04.7_amd64.deb</code></li><li><code>sudo vim /etc/apt/sources.list</code></li><li><p>全部替换</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure></li><li><p><code>sudo apt-get update</code></p></li></ul>]]></content>
    
    
    <summary type="html">很简单，记录一下</summary>
    
    
    
    <category term="Engineer" scheme="https://float0108.github.io/categories/Engineer/"/>
    
    
    <category term="linux" scheme="https://float0108.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>蓝叠adb连接并配置网络代理</title>
    <link href="https://float0108.github.io/Engineer/95cd8fac.html"/>
    <id>https://float0108.github.io/Engineer/95cd8fac.html</id>
    <published>2023-02-15T07:48:36.000Z</published>
    <updated>2023-02-15T08:21:30.807Z</updated>
    
    <content type="html"><![CDATA[<p>说在前面：</p><ol><li>由于配置wsl导致原模拟器失效，选择了蓝叠模拟器（下载安装器后会自动配置为Hyper-v版本）</li><li>蓝叠国际不能自动配置root，需要手动破解，此处选择的是蓝叠中国（二者可以同时安装并共存，也可以单独卸载）</li><li>使用SSR打开局域网共享功能以端口号1080能够成功配置代理，<strong>但是无法进行pac代理</strong>，代理规则和代理模式与代理服务server（主机）<strong>不同步</strong>。感觉不如在模拟器里再装一个SSR……</li></ol><h3 id="1-配置Adb环境"><a href="#1-配置Adb环境" class="headerlink" title="1. 配置Adb环境"></a>1. 配置Adb环境</h3><p>下载（以下链接为最新版本）</p><blockquote><p>ADB和Fastboot for Windows<br><a href="https://dl.google.com/android/repository/platform-tools-latest-windows.zip">https://dl.google.com/android/repository/platform-tools-latest-windows.zip</a></p><p>ADB和Fastboot for Mac<br><a href="https://dl.google.com/android/repository/platform-tools-latest-darwin.zip">https://dl.google.com/android/repository/platform-tools-latest-darwin.zip</a></p><p>ADB和Fastboot for Linux<br>   <a href="https://dl.google.com/android/repository/platform-tools-latest-linux.zip">https://dl.google.com/android/repository/platform-tools-latest-linux.zip</a></p></blockquote><p>下载完成后，找个地方解压并添加目录到系统环境变量(Path)，以方便在任意位置用adb指令进行调用</p><h3 id="2-蓝叠Adb环境"><a href="#2-蓝叠Adb环境" class="headerlink" title="2. 蓝叠Adb环境"></a>2. 蓝叠Adb环境</h3><p>在设置-高级选项中打开蓝叠的Adb开关后会出现<code>127.0.0.1:port</code>的地址，如<code>127.0.0.1:51213</code>。</p><p>*：关于<code>127.0.0.1</code>——被称为<strong>本地环回地址(Loopback Address)</strong>，是一个虚拟的地址，可以用localhost代指。（Link：<a href="https://blog.csdn.net/msdnwolaile/article/details/51278867">127.0.0.1和localhost和本机IP三者的区别</a>）</p><p>保存后最好重启模拟器。模拟器每次重启，端口号都会改变。</p><h3 id="3-Adb连接到Bluestacks"><a href="#3-Adb连接到Bluestacks" class="headerlink" title="3. Adb连接到Bluestacks"></a>3. Adb连接到Bluestacks</h3><p>开启模拟器的情况下，在cmd中输入：<br><code>adb connect localhost:[port]</code></p><p>显示connected即已经连接成功，此时用<code>adb devices</code>可以看到端口地址<br><code>adb -s localhost:[port] shell</code></p><p>连接成功的情况下，该指令进入该设备直连的adb环境，cmd接下来的指令都不需要输入adb，而是以[设备码]:/ $ 开头<br>在这个环境下，继续输入指令可以配置设备的各参数。↓</p><h3 id="4-代理修改指令"><a href="#4-代理修改指令" class="headerlink" title="4. 代理修改指令"></a>4. 代理修改指令</h3><p><strong>注意</strong>，代理的错误配置可能导致<strong>无法联网</strong>。<br>用内置chrome打开任意网页发现不能联网的话，就用下面的指令换回默认代理。</p><h5 id="修改为指定代理指令"><a href="#修改为指定代理指令" class="headerlink" title="修改为指定代理指令"></a>修改为指定代理指令</h5><p><code>settings put global http_proxy [ip]:[port]</code></p><p>（据说可以在端口号后加/pac和/direct，试了一下发现虽然不影响联网但是也没有按指定的模式运行……这种代理似乎默认为全局，只要SSR软件在运行，无论是否为直连模式、模拟器都好像走全局代理）</p><h5 id="恢复默认代理指令（不要漏掉-）"><a href="#恢复默认代理指令（不要漏掉-）" class="headerlink" title="恢复默认代理指令（不要漏掉:）"></a>恢复默认代理指令（不要漏掉:）</h5><p><code>settings put global http_proxy :0</code></p><h5 id="如何确认代理中的ip地址"><a href="#如何确认代理中的ip地址" class="headerlink" title="如何确认代理中的ip地址"></a>如何确认代理中的ip地址</h5><p>*修改代理的ip取决于电脑本机ip，通过在cmd新窗口内输入<code>ipconfig /all</code>可以查看本机ip，对于我的电脑而言，该ip为<code>192.168.1.104</code><br>如果不确认哪个ip是对的，可以把查到的各个ip全都试一遍，模拟器中网页对网络代理的情况几乎是实时刷新的。</p><h5 id="其它指令"><a href="#其它指令" class="headerlink" title="其它指令"></a>其它指令</h5><p>用<code>settings delete global http_proxy</code> 可以删除代理，但是这样会直接连不上网（）<br><code>exit</code>指令可以直接退出adb。</p>]]></content>
    
    
    <summary type="html">流程和踩坑record</summary>
    
    
    
    <category term="Engineer" scheme="https://float0108.github.io/categories/Engineer/"/>
    
    
    <category term="Android" scheme="https://float0108.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>2022学年第一学期总结</title>
    <link href="https://float0108.github.io/Private/ca7300c6.html"/>
    <id>https://float0108.github.io/Private/ca7300c6.html</id>
    <published>2023-02-10T10:07:47.000Z</published>
    <updated>2023-02-15T05:21:20.626Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://floatdesu.github.io/Private/ca7300c6.html">使用网页版浏览</a></p><h3 id="大二上学期总结"><a href="#大二上学期总结" class="headerlink" title="大二上学期总结"></a>大二上学期总结</h3><p>学和玩都很愉快的一个学期！</p><p>课上的话，把非常非常非常不擅长的几门物理过了，专业课也能说学到了很多东西。QT的IDE确实差强人意，C++QT差不多会用但是不喜欢，不过借此机会学习了PythonQT，玩得相当开心（）</p><p>课余时间，用家教钱入手了游戏机，在游戏中巩固日语学习（？？？）；学习了很多python相关的内容……</p><h4 id="大二上学期学习情况"><a href="#大二上学期学习情况" class="headerlink" title="大二上学期学习情况"></a>大二上学期学习情况</h4><p>‌‌‌惯例的贴成绩单环节（x）（计算机组成待重考）</p><div class="table-container"><table><thead><tr><th>课程代码</th><th>课程名称</th><th>学分</th><th>分数</th></tr></thead><tbody><tr><td>CS2309</td><td>问题求解与实践</td><td>3</td><td>93</td></tr><tr><td>CS2501</td><td>离散数学</td><td>3</td><td>86</td></tr><tr><td>MATH1207</td><td>概率统计</td><td>3</td><td>93</td></tr><tr><td>PHY1222</td><td>大学物理实验（2）</td><td>1</td><td>88</td></tr><tr><td>MARX1204</td><td>马克思主义基本原理</td><td>3</td><td>87</td></tr><tr><td>MARX1205</td><td>形势与政策</td><td>0.5</td><td>84</td></tr><tr><td>MECH2508</td><td>理论力学</td><td>4</td><td>88</td></tr><tr><td>PHY1252</td><td>大学物理(A类）（2）</td><td>4</td><td>77</td></tr></tbody></table></div><p>‌‌‌2021年总学积分86.84，排位61/102，……，你系的这个分数我真的是受不了了……要是我上学期期末没退远，现在估计要跟致远老师拉扯退远了，问了一下室友专业的均分会觉得难以忍受的程度……你系……哎……</p><p>这学期觉得在这些方面已经挺好了，物理也没挂科，及格多点的卷面分给老师有力捞起，我已经不觉得有很多地方能提高了……或者说，我对这个学习成果本身就没什么不满意的地方，对于排位的话，……反正不能保研的话考多少分也无所谓吧，觉得重要的东西都学到了也行吧。</p><h4 id="尝试的项目（coding相关）"><a href="#尝试的项目（coding相关）" class="headerlink" title="尝试的项目（coding相关）"></a>尝试的项目（coding相关）</h4><p>主要是python，涉及到图像、pdf处理、excel处理、爬虫等等，想用就去了解一下，python也不愧为一个知名的好上手的语言，而且轮子非常多。美中不足做出来即使很小的东西也不得不打一个很大很大的包，按我同学的说法、这种程序就是“程序员之间的小情趣”……</p><p>比较杂，内容不复杂，主要是组装轮子然后调试一下，不过因为我比较菜所以也要花挺多心思的x</p><h5 id="1-Python-文字游戏录屏生成带时间轴的字幕文件"><a href="#1-Python-文字游戏录屏生成带时间轴的字幕文件" class="headerlink" title="1. (Python) 文字游戏录屏生成带时间轴的字幕文件"></a>1. (Python) 文字游戏录屏生成带时间轴的字幕文件</h5><p>涉及三个模块，视频抽帧图片的相似度比较、百度Ocr和EasyOcr两个接口的图片OCR、Excel文档的写处理（xlwt库）</p><blockquote><p>Author: AleryXiao<br>Date: 2022.10.15<br>Title: 抽取视频关键帧(可设置抽样频率和相似程度要求)并批量OCR识别图片并输出文件名和内容到Excel文档(利用百度OCR的Api)<br>Content:</p><pre><code>0. *两个用户可设定参数*    a. 抽帧频率targetFPS (每秒钟抽取几帧)    b. 目标相似度threshold (低于此相似度的图片将会被保存)    更高的targetFPS会消耗更多的时间, 但是会生成更精确的时间码1. 通过弹出的文件资源窗口选择一个或多个视频文件2. 对于每个视频文件：    按给定的每秒帧数进行抽帧(cv2.VideoCapture) 抽取的帧存储在temp.jpg中    对于第0个满足条件的帧, 存储至cache中    对于其它满足条件的帧, 将之与cache作比较:        如果相似度大于threshold  -&gt;储存至本地和cache, 更新cache为这一图片, 输出储存信息            OCR并将OCR结果和名字写入Excel文档 (在控制台输出处理结果)        如果相速度小于threshold  -&gt;输出舍弃信息        (SSIM的运行速度较为有限, 或许可以考虑使用多线程运行？)    完成后, 关闭抽帧相机, 输出完成的信息</code></pre></blockquote><h5 id="2-（Python）青年大学习名单对照和结果梳理"><a href="#2-（Python）青年大学习名单对照和结果梳理" class="headerlink" title="2. （Python）青年大学习名单对照和结果梳理"></a>2. （Python）青年大学习名单对照和结果梳理</h5><p>是帮同学做着玩的小软件！&gt;w&lt;</p><p>文件是.xlsx，导致之前学的xlwt用不了，学习了pandas库和dataframe类型做的。</p><p>正好遇到学习QT，给它做了图形化界面。<br>‌‌</p><h5 id="3-（Python）漫画-小说爬虫"><a href="#3-（Python）漫画-小说爬虫" class="headerlink" title="3. （Python）漫画/小说爬虫"></a>3. （Python）漫画/小说爬虫</h5><p>静态网页用了很经典的美丽汤库，但是漫画网页用了懒加载所以得用selenium库。</p><p>对于漫画，输出结果为结构清晰的文件夹及其内图片，进一步要做处理就是图片-&gt;PDF处理的环节，也顺便试了一下&gt;w&lt;，还加了书签，结果一时之间非常满意（）</p><h5 id="4-（Python）qq空间说说爬虫"><a href="#4-（Python）qq空间说说爬虫" class="headerlink" title="4. （Python）qq空间说说爬虫"></a>4. （Python）qq空间说说爬虫</h5><p>需要用到JS点击，为了方便也直接用selenium做的，输出内容到.md文件。</p><h5 id="5-一些特别简单的"><a href="#5-一些特别简单的" class="headerlink" title="5. 一些特别简单的"></a>5. 一些特别简单的</h5><p>数据绘图、图像批量黑边去除和滤镜、批量删除.md的未引用附件（后来发现obsidian有插件可以直接处理，……），之类的</p><h4 id="其它的事情（coding不那么相关）"><a href="#其它的事情（coding不那么相关）" class="headerlink" title="其它的事情（coding不那么相关）"></a>其它的事情（coding不那么相关）</h4><h5 id="1-做教程视频"><a href="#1-做教程视频" class="headerlink" title="1. 做教程视频"></a>1. 做教程视频</h5><p>其实不是第一次做教程视频，上学期电路理论也在b站做过，这次是做的汇编语言编程相关的x，本意还是给同学做着玩的，但是意外地很受欢迎，几天就上万播放了而且为我的账号带来了+1.5k的粉丝数（草）</p><h5 id="2-个人博客（hexo-github）"><a href="#2-个人博客（hexo-github）" class="headerlink" title="2. 个人博客（hexo+github）"></a>2. 个人博客（hexo+github）</h5><p><a href="floatdesu.github.io">Link</a>：floatdesu.github.io<br>（基本是游戏玩后感就是了x）</p><p>嗯，，，总之就是玩得非常开心，现在也还在用，有很多可以玩的花活<br>说起来这还是我第一次用git，……感觉博大精深。</p><h5 id="3-后续就要到寒假了"><a href="#3-后续就要到寒假了" class="headerlink" title="3. 后续就要到寒假了"></a>3. 后续就要到寒假了</h5><h3 id="寒假"><a href="#寒假" class="headerlink" title="寒假"></a>寒假</h3><p>主要还是在享受生活（不是）</p><p>和同学嚷嚷着啊啊啊啊啊怎么没有一个语言能像C++一样快速又像Python一样有很多包啊、、最好还能有很小巧的封包！同学：那你要不看看golang</p><p>我趣！好东西啊！</p><p>简单学了一下go语言和它的特色（？）结构，比如goroutine channel interface之类的，然后写我的快乐爬虫！（x）</p><p>写完漫画爬虫以后花费几个小时研究go去处理图片-》pdf，发现没有合适的轮子，在issue里发现了遇到同样问题的伙伴，现有的gopdf库的默认dpi会导致图片画质损失，总之就是在这方面和python比不了……</p><p>呜哇，世界上怎么没有完美的编程语言……已经在看Kotlin了在看了在看了（悲）只能说各家语言都有专长吧，技能肯定不是语言的问题，是思路的问题</p><h4 id="尝试的项目"><a href="#尝试的项目" class="headerlink" title="尝试的项目"></a>尝试的项目</h4><h5 id="1-（Go）QQ空间爬虫"><a href="#1-（Go）QQ空间爬虫" class="headerlink" title="1. （Go）QQ空间爬虫"></a>1. （Go）QQ空间爬虫</h5><p><a href="https://floatdesu.github.io/Codes/b854aa89.html">博客页面Link</a></p><p>链接是博客日志x<br>突出一个速度飞快好吧</p><h5 id="2-（Go）漫画爬虫"><a href="#2-（Go）漫画爬虫" class="headerlink" title="2. （Go）漫画爬虫"></a>2. （Go）漫画爬虫</h5><p><a href="https://floatdesu.github.io/Codes/b6f6fe6f.html">博客页面Link</a></p><p>也是速度飞快！封包甚至只有13M（）chromedp是yyds</p><h5 id="3-docker-linux容器搭建QQ原神bot"><a href="#3-docker-linux容器搭建QQ原神bot" class="headerlink" title="3. docker-linux容器搭建QQ原神bot"></a>3. docker-linux容器搭建QQ原神bot</h5><p>挂在我的群晖NAS上&gt;w&lt;</p><p>也不是很难，主要是linux命令行我不是很熟，然后这个bot（Yunzai-V3）的QQ接口并不是很稳定（会被QQ关黑屋），需要很多的尝试和调试……</p><h3 id="学期展望"><a href="#学期展望" class="headerlink" title="学期展望"></a>学期展望</h3><p>看上去硬课还是很多的，感觉要好好学才行呀！开始上日语辅修也蛮期待的，很自信地觉得应该不会花去很多时间精力x新的一天也要开开心心地加油呀！</p><p>（听上去敷衍）主要是我也不知道下学期会有什么想折腾的东西，可能学操作系统就够折腾了（x），不过只要有让我觉得好玩有意义的东西能学就会觉得很开心吧……嗯嗯。按我好朋友的说法就是，要是能一直对coding相关保持热情就好了！希望如此吧。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://floatdesu.github.io/Private/ca7300c6.html&quot;&gt;使用网页版浏览&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;大二上学期总结&quot;&gt;&lt;a href=&quot;#大二上学期总结&quot; class=&quot;headerlink&quot; title=</summary>
      
    
    
    
    <category term="Private" scheme="https://float0108.github.io/categories/Private/"/>
    
    
    <category term="LearningMatome" scheme="https://float0108.github.io/tags/LearningMatome/"/>
    
  </entry>
  
  <entry>
    <title>Golang爬取picaComic</title>
    <link href="https://float0108.github.io/Codes/b6f6fe6f.html"/>
    <id>https://float0108.github.io/Codes/b6f6fe6f.html</id>
    <published>2023-01-30T17:58:19.000Z</published>
    <updated>2023-01-31T09:18:11.986Z</updated>
    
    <content type="html"><![CDATA[<h1 id="web-golang"><a href="#web-golang" class="headerlink" title="web #golang"></a>web #golang</h1><p>第二次的Golang代码！纪念一下~~<br>也是第二次的picaComic爬虫，是之前python程序的再开，但也不算再开，因为做了很多很多的优化，比之前那个性能和稳定性都好得多</p><p>又是一次被迫99%在自己写的代码（）CV工程师已经名不副实了！！</p><h2 id="程序思路复盘"><a href="#程序思路复盘" class="headerlink" title="程序思路复盘"></a>程序思路复盘</h2><p>粗体为比起上次的python程序添加的内容</p><p>在写的过程中，进一步巩固了部分chromedp的函数，学习了chanel和进度条，有机会进一步使用了goroutine（可惜线程池使用失败了，下次再试试），对爬虫的技巧也有了更好一点的理解</p><ol><li>login<ol><li><strong>自动填写</strong>json文件里的用户名的和密码，如果没有就用户手填</li><li><strong>检测</strong>到appcasule框架表示进入了主页，进入下一环节</li></ol></li><li>选择画质<ol><li>本来想做自动选择的但是失败了，弹窗也不能点，原因不明（我怀疑是因为元素在后台的时候是可查询但不可点击的，但在chromedp里似乎没有waitClickable的选项）</li><li>所以放20秒给用户自己点（进入一个漫画页面的左上角就可以改设置）</li><li>没办法做是否选完的检测，除非要求用户发一个信号，太麻烦了不如定时</li></ol></li><li>检查idlist的每一本书，对于每一本书：<ol><li>进入书本主页，获取书本名字，标准化后在savePath（json中设置）中建立一个对应名字的文件夹</li><li>获取<strong>章节数</strong>和<strong>章节名字</strong>，建立子文件夹</li><li>对于每一个章节：<ol><li>进入章节页面，<strong>下拉到页面底部</strong>，重复2-3次检查顶端progressBar的值是否改变（事实上，页面和图片都使用了懒加载，但是图片的懒加载没关系，在标签里可以查询到真实链接），直到到达真正的页面尾部</li><li>查询所有图片元素，获取真实链接，将书的序号、章的序号、图的序号、图的链接绑成一个结构体，把指针送进<strong>下载通道</strong>picChan里</li></ol></li></ol></li><li>下载程序：<ol><li>初始化时就开始运行，监听下载通道中是否有内容，一旦出现内容就创建一个图片下载<strong>进程</strong>，命名按结构体中的序号值来确定</li></ol></li><li><strong>进度条</strong>：vscode自带终端不能在同一行内刷新，cmd运行时正常。<br>本来想试试做多个进度条同时加载（每一章节的图片下载情况），但是考虑到go-progressbar的原理（上下行切换和读取），所以只能用一个条，显示的是浏览器爬取图片真实src的进度而不是图片下载的进度</li></ol><h2 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h2><ul><li>运行效果很棒！多线程下载也非常给力&gt;w&lt;（虽然没有用线程池，是go自带的线程管理，据说会block）</li><li>比python快，而且封包只有13M，震惊</li><li>不能处理弹窗，有点遗憾，不过不处理弹窗并不影响图片链接的获取，这个还不错（x）</li><li>做了很多上次程序没有做的事情，很开心</li><li>没办法把pdf合成也用go做比较遗憾</li></ul><p>别的</p><ul><li>感觉这次程序的结构可以说是依托答辩，应该多分一点文件的，太长了太乱了！！！下次试试</li></ul><h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><details class="tag-plugin folding" child="codeblock"><summary><span>main.go</span></summary><div class="body"><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;context&quot;</span></span><br><span class="line"><span class="string">&quot;encoding/json&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;io/ioutil&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line"><span class="string">&quot;net/http&quot;</span></span><br><span class="line"><span class="string">&quot;net/url&quot;</span></span><br><span class="line"><span class="string">&quot;os&quot;</span></span><br><span class="line"><span class="string">&quot;path&quot;</span></span><br><span class="line"><span class="string">&quot;runtime&quot;</span></span><br><span class="line"><span class="string">&quot;strconv&quot;</span></span><br><span class="line"><span class="string">&quot;strings&quot;</span></span><br><span class="line"><span class="string">&quot;sync&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;github.com/schollz/progressbar&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;github.com/chromedp/cdproto/cdp&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/chromedp/cdproto/page&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/chromedp/chromedp&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/chromedp/chromedp/kb&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 全局变量</span></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">homeUrl  <span class="type">string</span> = <span class="string">&quot;https://manhuabika.com/pLogin/&quot;</span></span><br><span class="line">pageUrl  <span class="type">string</span> = <span class="string">&quot;https://manhuabika.com/pcomicview/?cid=&quot;</span></span><br><span class="line">pageUrl2 <span class="type">string</span> = <span class="string">&quot;https://manhuabika.com/pchapter/?cid=&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">account  <span class="type">string</span></span><br><span class="line">password <span class="type">string</span></span><br><span class="line">idList   []<span class="type">string</span></span><br><span class="line">savePath <span class="type">string</span></span><br><span class="line">PROXY    <span class="type">string</span> <span class="comment">//以上从json读取</span></span><br><span class="line">ctx      context.Context</span><br><span class="line">wg       sync.WaitGroup</span><br><span class="line">NmList   [<span class="number">100</span>][<span class="number">100</span>]<span class="type">string</span> <span class="comment">//对于漫画i，[i][0]为书的path，[i][1]-[i][n]为章节的path</span></span><br><span class="line">picChan  <span class="keyword">chan</span> *pic</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> pic <span class="keyword">struct</span> &#123; <span class="comment">//图片中包含书编号,章编号,图编号</span></span><br><span class="line">bkNum  <span class="type">int</span></span><br><span class="line">chNum  <span class="type">int</span></span><br><span class="line">picNum <span class="type">int</span></span><br><span class="line">src    <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(idList) == <span class="number">0</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;no books&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">Login() <span class="comment">//登录</span></span><br><span class="line"></span><br><span class="line">wg.Add(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">go</span> PicsDownload() <span class="comment">//开启图片监听线程</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> index, id := <span class="keyword">range</span> idList &#123;</span><br><span class="line">LoadBook(index, id)</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">close</span>(picChan)</span><br><span class="line"></span><br><span class="line">wg.Wait()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">standarlizeName</span><span class="params">(oriStr <span class="type">string</span>)</span></span> <span class="type">string</span> &#123;</span><br><span class="line">replacer := strings.NewReplacer(<span class="string">&quot;/&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;|&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;\\&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;:&quot;</span>, <span class="string">&quot; &quot;</span>, <span class="string">&quot;*&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;?&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;&lt;&quot;</span>, <span class="string">&quot;[&quot;</span>, <span class="string">&quot;&gt;&quot;</span>, <span class="string">&quot;]&quot;</span>, <span class="string">&quot;:&quot;</span>, <span class="string">&quot; &quot;</span>)</span><br><span class="line"><span class="keyword">return</span> replacer.Replace(oriStr)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">PicsDownload</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> wg.Done()</span><br><span class="line">picChan = <span class="built_in">make</span>(<span class="keyword">chan</span> *pic, <span class="number">100000</span>)</span><br><span class="line"><span class="keyword">for</span> picture := <span class="keyword">range</span> picChan &#123;</span><br><span class="line">wg.Add(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">go</span> PicDownload(picture)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">PicDownload</span><span class="params">(picture *pic)</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> wg.Done()</span><br><span class="line"><span class="comment">//HTTP代理</span></span><br><span class="line">proxyAddress, _ := url.Parse(PROXY)</span><br><span class="line">client := &amp;http.Client&#123;Transport: &amp;http.Transport&#123;Proxy: http.ProxyURL(proxyAddress)&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//打开链接</span></span><br><span class="line">req, _ := http.NewRequest(<span class="string">&quot;GET&quot;</span>, picture.src, <span class="literal">nil</span>)</span><br><span class="line">resp, err := client.Do(req)</span><br><span class="line">Check(err)</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取内容</span></span><br><span class="line">body, err := ioutil.ReadAll(resp.Body)</span><br><span class="line">Check(err)</span><br><span class="line"><span class="keyword">defer</span> resp.Body.Close()</span><br><span class="line"></span><br><span class="line"><span class="comment">//检查路径,保存</span></span><br><span class="line">filePath := NmList[picture.bkNum][picture.chNum] + <span class="string">&quot;/&quot;</span> + fmt.Sprintf(<span class="string">&quot;%02d&quot;</span>, picture.picNum) + <span class="string">&quot;.jpg&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 以写|创建的方式打开目标文件(因为文件夹在创建时就已经建好，所以k可以不用检查)</span></span><br><span class="line">f, err := os.OpenFile(filePath, os.O_WRONLY|os.O_CREATE, <span class="number">0644</span>)</span><br><span class="line">Check(err)</span><br><span class="line"><span class="keyword">defer</span> f.Close()</span><br><span class="line"></span><br><span class="line">f.Write(body)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Load</span><span class="params">(url <span class="type">string</span>)</span></span> &#123;</span><br><span class="line">err := chromedp.Run(ctx,</span><br><span class="line">chromedp.Navigate(url),</span><br><span class="line">chromedp.WaitVisible(<span class="string">`//div[@class=&#x27;appBottomMenu&#x27;]`</span>))</span><br><span class="line">Check(err)</span><br><span class="line">time.Sleep(<span class="number">2</span> * time.Second) <span class="comment">//无论如何，等待2秒再进行下一步操作</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">LoadBook</span><span class="params">(index <span class="type">int</span>, id <span class="type">string</span>)</span></span> &#123;</span><br><span class="line">bookNm := <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">var</span> contentNode []*cdp.Node</span><br><span class="line"></span><br><span class="line">Load(pageUrl + id)</span><br><span class="line">err := chromedp.Run(ctx,</span><br><span class="line">chromedp.TextContent(<span class="string">`//div[@class=&#x27;comic-title text-start&#x27;]`</span>, &amp;bookNm, chromedp.BySearch),</span><br><span class="line">chromedp.Nodes(<span class="string">`//div[@class=&quot;col-3 m-0 mb-1&quot;]`</span>, &amp;contentNode))</span><br><span class="line">Check(err)</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">&quot;\nStart to process book [%d]%s \n&quot;</span>, index+<span class="number">1</span>, bookNm)</span><br><span class="line"></span><br><span class="line">NmList[index][<span class="number">0</span>] = savePath + <span class="string">&quot;/&quot;</span> + standarlizeName(bookNm)</span><br><span class="line"></span><br><span class="line"><span class="comment">//章节数</span></span><br><span class="line">chaps := <span class="built_in">len</span>(contentNode)</span><br><span class="line">fmt.Printf(<span class="string">&quot;\nTotal: %d Chapters \n&quot;</span>, chaps)</span><br><span class="line"></span><br><span class="line"><span class="comment">//章节base1</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= chaps; i++ &#123;</span><br><span class="line">chapNm := <span class="string">&quot;&quot;</span></span><br><span class="line">chromedp.Run(ctx, chromedp.TextContent(contentNode[chaps-i].PartialXPath(), &amp;chapNm))</span><br><span class="line">chapNm = standarlizeName(chapNm)</span><br><span class="line">fmt.Printf(<span class="string">&quot;[%d] %s \n&quot;</span>, i, chapNm)</span><br><span class="line">NmList[index][i] = NmList[index][<span class="number">0</span>] + <span class="string">&quot;/[&quot;</span> + fmt.Sprintf(<span class="string">&quot;%02d&quot;</span>, i) + <span class="string">&quot;] &quot;</span> + chapNm <span class="comment">//章节数补全2位,加上章节名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !pathExists(NmList[index][i]) &#123; <span class="comment">//建好文件夹</span></span><br><span class="line">err = os.MkdirAll(NmList[index][i], <span class="number">0766</span>)</span><br><span class="line">Check(err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">bar := progressbar.New(chaps) <span class="comment">//显示一个进度条，用来展示每本书的进度</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= chaps; i++ &#123;</span><br><span class="line">LoadChap(index, i, bar)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">LoadChap</span><span class="params">(bookNum <span class="type">int</span>, chapNum <span class="type">int</span>, bar *progressbar.ProgressBar)</span></span> &#123;</span><br><span class="line"><span class="comment">//分为两步，下拉</span></span><br><span class="line">Load(pageUrl2 + idList[bookNum] + <span class="string">&quot;&amp;chapter=&quot;</span> + strconv.Itoa(chapNum))</span><br><span class="line">ScrollDown()</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> picNodes []*cdp.Node</span><br><span class="line">err := chromedp.Run(ctx,</span><br><span class="line">chromedp.Nodes(<span class="string">`//div[@class=&#x27;chapter-images wide-block pt-2 pb-2 my-bg-white&#x27;]/img`</span>, &amp;picNodes))</span><br><span class="line">Check(err)</span><br><span class="line"></span><br><span class="line"><span class="comment">// println(&quot;total Picnum = &quot;, len(picNodes))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(picNodes); i++ &#123;</span><br><span class="line">picture := &amp;pic&#123;bookNum, chapNum, i, picNodes[i].AttributeValue(<span class="string">&quot;data-src&quot;</span>)&#125;</span><br><span class="line">picChan &lt;- picture</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bar.Add(<span class="number">1</span>) <span class="comment">//标记这章节已经完成</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ScrollDown</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> prgsBar <span class="type">string</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; ; &#123;</span><br><span class="line">err := chromedp.Run(ctx,</span><br><span class="line">chromedp.Evaluate(<span class="string">&quot;window.scrollBy(0,document.body.scrollHeight)&quot;</span>, <span class="literal">nil</span>),</span><br><span class="line">chromedp.Sleep(<span class="number">2</span>*time.Second),</span><br><span class="line">chromedp.TextContent(<span class="string">`.//div[@class=&quot;w-100 text-center text-black-50 my-read-tip&quot;]`</span>, &amp;prgsBar))</span><br><span class="line">Check(err)</span><br><span class="line"><span class="keyword">if</span> prgsBar == <span class="string">&quot;100 % （點擊可跳轉）&quot;</span> &#123;</span><br><span class="line"><span class="keyword">if</span> i &gt; <span class="number">2</span> &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">i++</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> i != <span class="number">0</span> &#123;</span><br><span class="line">i = <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Login</span><span class="params">()</span></span> &#123;</span><br><span class="line">err := chromedp.Run(ctx,</span><br><span class="line">chromedp.Navigate(homeUrl),</span><br><span class="line">chromedp.WaitVisible(<span class="string">&quot;#email1&quot;</span>, chromedp.ByID),</span><br><span class="line">chromedp.SendKeys(<span class="string">&quot;#email1&quot;</span>, account+kb.Tab+password, chromedp.ByID),</span><br><span class="line">chromedp.Click(<span class="string">`.//button[@type=&quot;submit&quot;]`</span>, chromedp.BySearch),</span><br><span class="line">chromedp.WaitVisible(<span class="string">`//div[@class=&#x27;appBottomMenu&#x27;]`</span>))</span><br><span class="line">Check(err)</span><br><span class="line">fmt.Println(<span class="string">&quot;login complete&quot;</span>)</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">&quot;\n...you&#x27;ve 15 second to change the picture quality...&quot;</span>)</span><br><span class="line">time.Sleep(<span class="number">100</span>)</span><br><span class="line">Load(pageUrl2 + idList[<span class="number">0</span>] + <span class="string">&quot;&amp;chapter=1&quot;</span>)</span><br><span class="line">time.Sleep(<span class="number">10</span> * time.Second)</span><br><span class="line">fmt.Println(<span class="string">&quot;processing start&quot;</span>)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">pathExists</span><span class="params">(path <span class="type">string</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">_, err := os.Stat(path)</span><br><span class="line"><span class="keyword">if</span> err == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> os.IsNotExist(err) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123; <span class="comment">//chromedp初始化</span></span><br><span class="line">headlessFlag := chromedp.Flag(<span class="string">&quot;headless&quot;</span>, <span class="literal">false</span>) <span class="comment">//有头模式</span></span><br><span class="line">opts := <span class="built_in">append</span>(</span><br><span class="line">chromedp.DefaultExecAllocatorOptions[:],</span><br><span class="line">chromedp.NoDefaultBrowserCheck,                               <span class="comment">//不检查默认浏览器</span></span><br><span class="line">headlessFlag,                                                 <span class="comment">//无头</span></span><br><span class="line">chromedp.IgnoreCertErrors,                                    <span class="comment">//忽略错误</span></span><br><span class="line">chromedp.Flag(<span class="string">&quot;blink-settings&quot;</span>, <span class="string">&quot;imagesEnabled=false&quot;</span>),       <span class="comment">//不加载gif图像 因为有可能会卡住</span></span><br><span class="line">chromedp.DisableGPU,                                          <span class="comment">//关闭GPU渲染</span></span><br><span class="line">chromedp.NoSandbox,                                           <span class="comment">//不适用谷歌的sanbox模式运行</span></span><br><span class="line">chromedp.NoFirstRun,                                          <span class="comment">//设置网站不是首次运行</span></span><br><span class="line">chromedp.Flag(<span class="string">&quot;disable-web-security&quot;</span>, <span class="literal">true</span>),                  <span class="comment">//禁用网络安全标志</span></span><br><span class="line">chromedp.Flag(<span class="string">&quot;disable-extensions&quot;</span>, <span class="literal">true</span>),                    <span class="comment">//关闭插件支持</span></span><br><span class="line">chromedp.Flag(<span class="string">&quot;disable-default-apps&quot;</span>, <span class="literal">true</span>),                  <span class="comment">//关闭默认浏览器检查</span></span><br><span class="line">chromedp.WindowSize(<span class="number">1280</span>, <span class="number">1024</span>),                              <span class="comment">//初始大小</span></span><br><span class="line">chromedp.Flag(<span class="string">&quot;run-all-compositor-stages-before-draw&quot;</span>, <span class="literal">true</span>), <span class="comment">//在呈现所有数据之前防止创建Pdf</span></span><br><span class="line">chromedp.UserAgent(<span class="string">`Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36`</span>), <span class="comment">//设置UserAgent</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">allocCtx, _ := chromedp.NewExecAllocator(context.Background(), opts...)</span><br><span class="line">ctx, _ = chromedp.NewContext(</span><br><span class="line">allocCtx,</span><br><span class="line">chromedp.WithLogf(log.Printf),</span><br><span class="line">)</span><br><span class="line">chromedp.Run(ctx, <span class="built_in">make</span>([]chromedp.Action, <span class="number">0</span>, <span class="number">1</span>)...) <span class="comment">//打开，但是什么都不干</span></span><br><span class="line">fmt.Println(<span class="string">&quot;-- chromedp start success --&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123; <span class="comment">//customsettings初始化</span></span><br><span class="line"><span class="keyword">type</span> custom <span class="keyword">struct</span> &#123;</span><br><span class="line">Account  <span class="type">string</span>   <span class="string">`json:&quot;Account&quot;`</span></span><br><span class="line">Password <span class="type">string</span>   <span class="string">`json:&quot;Password&quot;`</span></span><br><span class="line">IDList   []<span class="type">string</span> <span class="string">`json:&quot;IDList&quot;`</span> <span class="comment">//漫画列表</span></span><br><span class="line">SavePath <span class="type">string</span>   <span class="string">`json:&quot;SavePath&quot;`</span></span><br><span class="line">PROXY    <span class="type">string</span>   <span class="string">`json:&quot;PROXY&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">_, projectPath, _, _ := runtime.Caller(<span class="number">0</span>)</span><br><span class="line">filePath := path.Dir(projectPath) + <span class="string">&quot;/custom.json&quot;</span></span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">&quot;&gt;fetch customInfo from&quot;</span>, filePath)</span><br><span class="line"></span><br><span class="line">jsonFile, err := os.Open(filePath)</span><br><span class="line">Check(err)</span><br><span class="line"><span class="keyword">defer</span> jsonFile.Close()</span><br><span class="line"></span><br><span class="line">jsonData, err := ioutil.ReadAll(jsonFile)</span><br><span class="line">Check(err)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> customInfo custom</span><br><span class="line">json.Unmarshal(jsonData, &amp;customInfo)</span><br><span class="line">account, password, idList, savePath, PROXY = customInfo.Account, customInfo.Password, customInfo.IDList, customInfo.SavePath, customInfo.PROXY</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> PROXY == <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">PROXY = <span class="string">&quot;http://127.0.0.1:1080/&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">&quot;-- custom.json loadng success --&quot;</span>)</span><br><span class="line">fmt.Println(<span class="string">&quot;Welcome!&quot;</span>, account)</span><br><span class="line">fmt.Println(<span class="string">&quot;your savePath:&quot;</span>, savePath)</span><br><span class="line">fmt.Println(<span class="string">&quot;your cidList:&quot;</span>, idList)</span><br><span class="line">fmt.Println(<span class="string">&quot;your proxy:&quot;</span>, idList)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Check</span><span class="params">(err <span class="type">error</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></details><details class="tag-plugin folding" child="codeblock"><summary><span>./custom.json</span></summary><div class="body"><ul><li>放在.exe或者.go的同目录下</li></ul><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">&quot;Account&quot;</span><span class="punctuation">:</span> <span class="string">&quot;账号，空置则手动填写（不着急，检定登陆成功才会开始下一步）&quot;</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">&quot;Password&quot;</span><span class="punctuation">:</span> <span class="string">&quot;密码，空置则手动填写，建议不要空置&quot;</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">&quot;IdList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;63944d19d6ffb644413e139f漫画的cid列表，用逗号分割&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">&quot;SavePath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;G:/Comic/2023.02，文件目录&quot;</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">&quot;PROXY&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://127.0.0.1:1080/默认端口，空置也行&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div></details>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;web-golang&quot;&gt;&lt;a href=&quot;#web-golang&quot; class=&quot;headerlink&quot; title=&quot;web #golang&quot;&gt;&lt;/a&gt;web #golang&lt;/h1&gt;&lt;p&gt;第二次的Golang代码！纪念一下~~&lt;br&gt;也是第二次的picaCom</summary>
      
    
    
    
    <category term="Codes" scheme="https://float0108.github.io/categories/Codes/"/>
    
    
    <category term="web" scheme="https://float0108.github.io/tags/web/"/>
    
    <category term="golang" scheme="https://float0108.github.io/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>Python爬取picaComic</title>
    <link href="https://float0108.github.io/Codes/482da7d4.html"/>
    <id>https://float0108.github.io/Codes/482da7d4.html</id>
    <published>2023-01-30T17:58:03.000Z</published>
    <updated>2023-01-31T09:16:48.929Z</updated>
    
    <content type="html"><![CDATA[<h1 id="net-python"><a href="#net-python" class="headerlink" title="net #python"></a>net #python</h1><p>第一次的python-selenium爬虫，动态网页确实复杂很多啊（……）<br>现在回头看觉得到处是瑕疵了hhh<br>做一个纪念吧。</p><details class="tag-plugin folding" child="codeblock"><summary><span>Source Code ( using python-selenium )</span></summary><div class="body"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> os <span class="comment">#文件管理</span></span><br><span class="line"><span class="comment"># import imghdr  #图像查损</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="comment"># import urllib</span></span><br><span class="line"><span class="keyword">import</span> imghdr</span><br><span class="line"></span><br><span class="line"><span class="comment">#---------爬虫初始化----------</span></span><br><span class="line">chrome_options = webdriver.ChromeOptions()</span><br><span class="line">user_agent = <span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0.3 Safari/605.1.15&quot;</span></span><br><span class="line"><span class="comment"># 增加用户代理</span></span><br><span class="line">chrome_options.add_argument(<span class="string">&#x27;--user-agent=%s&#x27;</span> % user_agent)</span><br><span class="line"><span class="comment"># 忽略证书错误</span></span><br><span class="line">chrome_options.add_argument(<span class="string">&#x27;--ignore-certificate-errors&#x27;</span>)</span><br><span class="line">chrome_options.add_argument(<span class="string">&#x27;--ignore-ssl-errors&#x27;</span>) </span><br><span class="line">chrome_options.add_argument(<span class="string">&#x27;--ignore-certificate-errors-spki-list&#x27;</span>)</span><br><span class="line"><span class="comment"># 忽略 Bluetooth: bluetooth_adapter_winrt.cc:1075 Getting Default Adapter failed. 错误</span></span><br><span class="line">chrome_options.add_experimental_option(<span class="string">&#x27;excludeSwitches&#x27;</span>, [<span class="string">&#x27;enable-automation&#x27;</span>])</span><br><span class="line"><span class="comment"># 忽略 DevTools listening on ws://127.0.0.1... 提示</span></span><br><span class="line">chrome_options.add_experimental_option(<span class="string">&#x27;excludeSwitches&#x27;</span>, [<span class="string">&#x27;enable-logging&#x27;</span>])</span><br><span class="line">chrome_options.add_argument(<span class="string">&#x27;blink-settings=imagesEnabled=false&#x27;</span>) </span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome(options=chrome_options)  <span class="comment">#模拟器启动</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># opener = urllib.request.build_opener() #防反爬</span></span><br><span class="line"><span class="comment"># opener.addheaders = [(&#x27;User-Agent&#x27;, &#x27;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1941.0 Safari/537.36&#x27;)]</span></span><br><span class="line"><span class="comment"># urllib.request.install_opener(opener)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 先加载完所有链接再下载，最稳定的版本</span></span><br><span class="line">idlist=[<span class="string">&quot;63c00254380963328e1d487c&quot;</span>]</span><br><span class="line"><span class="comment">#漫画地址list&quot;63c00254380963328e1d487c&quot;,</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">checkFileName</span>(<span class="params">txt</span>):</span><br><span class="line">  dictionary = &#123;<span class="string">&quot; &quot;</span>:<span class="string">&quot;&quot;</span>,<span class="string">&quot;|&quot;</span>:<span class="string">&quot; &quot;</span>,<span class="string">&quot;/&quot;</span>:<span class="string">&quot; &quot;</span>,<span class="string">&quot;&lt;&quot;</span>:<span class="string">&quot;[&quot;</span>,<span class="string">&quot;&gt;&quot;</span>:<span class="string">&quot;]&quot;</span>,<span class="string">&quot;:&quot;</span>:<span class="string">&quot;_&quot;</span>,<span class="string">&quot;\&quot;&quot;</span>:<span class="string">&quot;&#x27;&quot;</span>,<span class="string">&quot;+&quot;</span>:<span class="string">&quot;_&quot;</span>&#125;</span><br><span class="line">  transTable = txt.maketrans(dictionary)</span><br><span class="line">  txt = txt.translate(transTable)</span><br><span class="line">  <span class="keyword">return</span> txt</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">pulldown</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;---Pulling Down The Page---&quot;</span>)</span><br><span class="line">    time.sleep(<span class="number">5</span>) <span class="comment">#进入一个新的网页，先稍等加载一会</span></span><br><span class="line"></span><br><span class="line">    cnt=<span class="number">0</span></span><br><span class="line">    check_height = driver.execute_script(<span class="string">&quot;return document.body.scrollHeight;&quot;</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        driver.execute_script(<span class="string">&quot;window.scrollBy(0,1200)&quot;</span>)  <span class="comment">#太快容易中断</span></span><br><span class="line">        time.sleep(<span class="number">1.2</span>)</span><br><span class="line">        check_height1 = driver.execute_script(<span class="string">&quot;return document.body.scrollHeight;&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> check_height == check_height1:</span><br><span class="line">            cnt+=<span class="number">1</span></span><br><span class="line">            <span class="built_in">print</span>(cnt)</span><br><span class="line">            <span class="keyword">if</span> cnt&gt;=<span class="number">25</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;---Back To The Main---&quot;</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            check_height = check_height1</span><br><span class="line">            <span class="keyword">if</span> cnt&lt;<span class="number">20</span>:</span><br><span class="line">                cnt=<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">isCompleted</span>(<span class="params">img</span>): <span class="comment">#图像完整性检查（因为urlretrieve稳定性很好，所以不开也没关系</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(img):</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> imghdr.what(img):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;image not completely downloaded, i\&#x27;m trying again now.&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">imgOutput</span>(<span class="params">imgUrl, i, savePath</span>):</span><br><span class="line">    filename=savePath+<span class="string">f&#x27;\\<span class="subst">&#123;i:<span class="number">0</span>&gt;<span class="number">4</span>&#125;</span>.jpg&#x27;</span></span><br><span class="line">    r = requests.get(imgUrl)</span><br><span class="line">    <span class="comment">##打开文件并写入</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(r.content)</span><br><span class="line">    <span class="comment"># urllib.request.urlretrieve(url=imgUrl, filename=savePath+f&#x27;\\&#123;i:0&gt;4&#125;.jpg&#x27;)</span></span><br><span class="line">    <span class="comment"># if isCompleted(savePath+f&#x27;\\&#123;i:0&gt;4&#125;.jpg&#x27;):</span></span><br><span class="line">    <span class="comment">#     return 1 # 检查图片完整性（如果用这一段，下面改0）</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getImgs</span>(<span class="params">url, savePath</span>):</span><br><span class="line"></span><br><span class="line">    driver.get(url)</span><br><span class="line">    pulldown()  <span class="comment">#下拉，刷新所有链接</span></span><br><span class="line"></span><br><span class="line">    imgs = driver.find_elements(</span><br><span class="line">        by=By.XPATH, value=<span class="string">&quot;//div[@class=&#x27;chapter-images wide-block pt-2 pb-2 my-bg-white&#x27;]/img&quot;</span>)</span><br><span class="line">    <span class="comment">#在下拉过程中，元素的src属性会刷新</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> imgs:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;no more pages&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(savePath):</span><br><span class="line">        os.makedirs(savePath)</span><br><span class="line"></span><br><span class="line">    jpgn = <span class="number">0</span></span><br><span class="line">    start=time.time()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> imgs:</span><br><span class="line">        <span class="comment"># if isCompleted(savePath+f&#x27;\\&#123;jpgn:0&gt;4&#125;.jpg&#x27;): #断点续传</span></span><br><span class="line">        <span class="comment">#    jpgn+=1</span></span><br><span class="line">        <span class="comment">#    print(f&quot;---&#123;jpgn&#125;.jpg has existed in *&#123;savePath[-6:]&#125;*---&quot;)</span></span><br><span class="line">        <span class="comment"># else:</span></span><br><span class="line">            imgUrl = <span class="built_in">str</span>(i.get_attribute(<span class="string">&quot;src&quot;</span>))</span><br><span class="line">            <span class="keyword">if</span> imgUrl.find(<span class="string">&quot;.gif&quot;</span>) == -<span class="number">1</span>:  <span class="comment">#不下载gif</span></span><br><span class="line">                time.sleep(<span class="number">1.5</span>)</span><br><span class="line">                cnt=<span class="number">0</span></span><br><span class="line">                <span class="keyword">while</span> cnt&lt;=<span class="number">5</span>:</span><br><span class="line">                    <span class="keyword">if</span> imgOutput(imgUrl, jpgn, savePath):</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    imgUrl = <span class="built_in">str</span>(i.get_attribute(<span class="string">&quot;src&quot;</span>))</span><br><span class="line">                    time.sleep(<span class="number">1</span>)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">f&quot;Something Wrong Here. Cnt=<span class="subst">&#123;cnt&#125;</span>&quot;</span>)</span><br><span class="line">                    cnt+=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (cnt&gt;<span class="number">5</span>):</span><br><span class="line">                    <span class="built_in">print</span>(imgUrl)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;Sorry, I can&#x27;t deal with this error, please check this url later&quot;</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">if</span> cnt&gt;<span class="number">0</span>:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&quot;Luckily, it has been successfully processed now. &quot;</span>)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">f&quot;---<span class="subst">&#123;jpgn:<span class="number">0</span>&gt;<span class="number">4</span>&#125;</span>.jpg has been downloaded in /<span class="subst">&#123;savePath[-<span class="number">6</span>:]&#125;</span>---&quot;</span>)</span><br><span class="line"></span><br><span class="line">                jpgn += <span class="number">1</span></span><br><span class="line">    end=time.time()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;||This Chapt Consumed <span class="subst">&#123;end-start&#125;</span> seconds.||&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> jpgn == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">driver.get(<span class="string">&#x27;https://manhuabika.com/plogin/&#x27;</span>)</span><br><span class="line">time.sleep(<span class="number">10</span>)  <span class="comment"># 登录</span></span><br><span class="line"></span><br><span class="line">driver.get(</span><br><span class="line">    <span class="string">&quot;https://manhuabika.com/pchapter/?cid=5fde2af559b287406e2151b8&amp;chapter=1&quot;</span>)</span><br><span class="line">time.sleep(<span class="number">10</span>)  <span class="comment"># 修改清晰度</span></span><br><span class="line"></span><br><span class="line">bcnt=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> cid <span class="keyword">in</span> idlist:</span><br><span class="line"></span><br><span class="line">    start=time.time()</span><br><span class="line"></span><br><span class="line">    <span class="comment">#---------每本书的初始化---------</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;\n\n|||||||Reading Book <span class="subst">&#123;bcnt&#125;</span>||||||&quot;</span>)</span><br><span class="line">    url = <span class="string">f&quot;https://manhuabika.com/pchapter/?cid=<span class="subst">&#123;cid&#125;</span>&amp;chapter=&quot;</span></span><br><span class="line">    chapN = <span class="number">3</span> <span class="comment">#起始章</span></span><br><span class="line">    urlC = url+<span class="built_in">str</span>(chapN)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#---------获取书名----------</span></span><br><span class="line">    driver.get(<span class="string">f&quot;https://manhuabika.com/pcomicview/?cid=<span class="subst">&#123;cid&#125;</span>&quot;</span>) </span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line">    urlTitle=driver.find_element(by=By.XPATH, value=<span class="string">&quot;//div[@class=&#x27;comic-title text-start&#x27;]&quot;</span>).text</span><br><span class="line">    urlTitle=checkFileName(urlTitle)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;&gt;&gt;Loading Book <span class="subst">&#123;bcnt&#125;</span>:[<span class="subst">&#123;cid&#125;</span>] <span class="subst">&#123;urlTitle&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    savePath = <span class="string">&quot;G:\\Comic\\Spider\\&quot;</span>+urlTitle+<span class="string">&quot;\\&quot;</span> <span class="comment">#书名作为文件夹名字</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#---------分章节爬取图像----------</span></span><br><span class="line">    <span class="keyword">while</span> getImgs(urlC, savePath+<span class="string">f&#x27;Chap<span class="subst">&#123;chapN:<span class="number">0</span>&gt;<span class="number">2</span>&#125;</span>&#x27;</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Chap<span class="subst">&#123;chapN&#125;</span> is Finished&quot;</span>)</span><br><span class="line">        chapN += <span class="number">1</span></span><br><span class="line">        urlC = url+<span class="built_in">str</span>(chapN)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#---------每本书的结尾----------</span></span><br><span class="line">    end=time.time()</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;This Book Consumed <span class="subst">&#123;end-start&#125;</span> seconds.&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;||||||Book <span class="subst">&#123;bcnt&#125;</span>:[<span class="subst">&#123;cid&#125;</span>] <span class="subst">&#123;urlTitle&#125;</span> have been downloaded. ||||||&quot;</span>)</span><br><span class="line"></span><br><span class="line">    bcnt+=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\n\nおめでとうございます! All Books Have Been Processed Successfully.&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure></div></details>]]></content>
    
    
    <summary type="html">以前做的python爬取动态网页（漫画）的试水，新写的go程序比这个好得多得多，仅作纪念了。</summary>
    
    
    
    <category term="Codes" scheme="https://float0108.github.io/categories/Codes/"/>
    
    
    <category term="web" scheme="https://float0108.github.io/tags/web/"/>
    
    <category term="python" scheme="https://float0108.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>互联网基础</title>
    <link href="https://float0108.github.io/Engineer/24012d32.html"/>
    <id>https://float0108.github.io/Engineer/24012d32.html</id>
    <published>2023-01-28T15:01:44.000Z</published>
    <updated>2023-02-15T15:02:56.088Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Internet"><a href="#Internet" class="headerlink" title="Internet"></a>Internet</h1><p>课程笔记：BV1qy4y177LM</p><h1 id="网络协议"><a href="#网络协议" class="headerlink" title="网络协议"></a>网络协议</h1><h2 id="导论"><a href="#导论" class="headerlink" title="导论"></a>导论</h2><p>包（packet）传输 &amp; 丢包<br>    queuing &amp; loss: drop packets when memory(buffer) is full</p><p>ISP(Internet Service Provider)<br>不同的接入网(access net)连入ISP，通过IXP进行信息交换</p><p>4 Sources of Packet Delay<br><img src="../../../assets/Pasted%20image%2020230125202040.png" alt=""></p><p>总延时=处理时间(很短)+排队时间+发送时间(数据量L/网速R)+传播时间(路径长D/传播时间S)</p><p>Protocols 协议：“语言”<br>    TCP<br>    IP<br>    HTTP<br>    802.11</p><p>不同的协议涉及不同的分层结构。<br>TCP/IP model</p><ul><li><p>Application 应用层 Layer 7<br>  FTP（文件传输协议） SMTP（邮件） HTTP<br>  为应用提供网络服务</p></li><li><p>Transport 传输层 Layer 4<br>  TCP UDP<br>  世界级的数据传输<br>  ==数据包Package==</p></li><li><p>Network  网络层 Layer 3<br>  IP<br>  关心数据的分发<br>  ==数据报Datagram==<br>  —路由器</p></li><li><p>Link  数据链路层 Layer 2<br>  相邻网络元素间的数据传输（Wifi,PPP, Ethernet)<br>  ==数据帧Frame==<br>  —交换机</p></li><li><p>Physical 物理层 Layer 1<br>  bits “on the file”<br>  网线设计和接口</p></li></ul><p>ISO/OSI model<br>在应用层和传输层之间增加presentation (进行数据压缩) 和 session（数据检查和修复）</p><p>Layer &amp; Header<br>    TCO/IP model中，许多层与特定的header（有时header &amp; trailer）相关<br>    用来解释数据内容、发送路径等<br>    （每向下经过一层，header都会累加）</p><p>Address<br>    appli：Application-specific address<br>        如电子邮件地址<br>    transport: Port address 端口<br>        每一个使用网卡的程序的编号，differentiate differnet processes<br>    network: Logical address (IP地址)<br>        32-bit IPV4 / 128-bit IPV6<br>    link：Physical address（mac地址）<br>        node address (defined by LAN/WAN)</p><h2 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h2><p>Multiplexing/Demultipliexing<br>    Mux, Demux<br>    combine several data streams / seperate and handle</p><p>UDP (User Datagram Protocol)<br>    unreliable, unordered delivery<br>        no-frills extension of “best-effort” IP<br>    services not available:<br>        delay guarantee<br>        bandwidth guarantees<br>    无需建立连接，small header，非常快<br>    （含有校验checksum，但无法纠正错误）</p><p>UDP封装示意图<br><img src="../../../assets/Pasted%20image%2020230125210354.png" alt=""></p><p>Principles of reliable data transfer<br><img src="../../../assets/Pasted%20image%2020230125210652.png" alt=""></p><p>FSM(Finite state machine) 有限状态自动机<br>    一种非常可靠的传输机制（类似投币进闸）<br>    2.0 错误检查机制-》<br>        ACK（acknowledge）没有出现错误 &amp; NAK（Negative…）收到的数据错误<br>        收到数据正确-》通过<br>        收到数据错误-》请求再次发送-》再次检查…<br>        （如果返回的ACK/NAK出错？对数据包进行N循环编号，check和data中均包含编号，则双方可以均可以准确判断具体哪一个数据包或check信息出现问题并进行重发）<br>    -》3.0 加入计时器，建立防丢机制（一旦check信息time out，也进行重发）<br>        （但是性能很差）<br>-》通过Pipeline 可以提高利用率（一次发送多包数据，提高利用率）<br>    GBN（Go back n）：从第一个NAK/TimeOut包开始全部重发（对于N=20，如果N=2丢包，则从N=2开始再进行多包发送），<br>    SR（Selective Repeat）：对包的ACK情况进行标记，发送问题包直至收到ACK信息<br>        可能需要重新排序<br>        如果循环编号的N相对于Window太小，编号可能出现重复使用</p><p>TCP<br>    reliable, in-order deliery<br>        congestion control<br>        flow control (sender will not overwhelm receiver)<br>        connection setup （connectio-oriented <em>handshaking</em>, point-to-point)<br>        full duplex data 边发边收<br>        pipeline<br>    TCP fast retransmit:</p><pre><code>    &gt;=3 ACKs直接重发，减少等待时间</code></pre><h2 id="Socket编程"><a href="#Socket编程" class="headerlink" title="Socket编程"></a>Socket编程</h2><h3 id="Socket"><a href="#Socket" class="headerlink" title="Socket"></a>Socket</h3><blockquote><p>Socket是BSD UNIX的进程通信机制，通常也称作”套接字”，用于描述IP地址和端口，是一个通信链的句柄。<br>Socket可以理解为TCP/IP网络的API，它定义了许多函数或例程，程序员可以用它们来开发TCP/IP网络上的应用程序。电脑上运行的应用程序通常通过”套接字”向网络发出请求或者应答网络请求。</p></blockquote><p>介于应用层和传输层之间<br>对应用层的抽象</p><ul><li>常用的Socket类型有两种：流式Socket和数据报式Socket，流式是一种面向连接的Socket，针对于面向连接的TCP服务应用，数据报式Socket是一种无连接的Socket，针对于无连接的UDP服务应用</li><li>TCP：比较靠谱，面向连接，比较慢</li><li>UDP：不是太靠谱，比较快<br>（举个例子：TCP就像货到付款的快递，送到家还必须见到你人才算一整套流程。UDP就像某快递快递柜一扔就走管你收到收不到，一般直播用UDP。）</li></ul><h3 id="TCP"><a href="#TCP" class="headerlink" title="TCP"></a><a href="https://www.topgoer.com/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/socket%E7%BC%96%E7%A8%8B/TCP%E7%BC%96%E7%A8%8B.html">TCP</a></h3><p>TCP服务端程序的处理流程：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.监听端口</span><br><span class="line">2.接收客户端请求建立链接</span><br><span class="line">3.创建goroutine处理链接。</span><br></pre></td></tr></table></figure><p>TCP客户端进行TCP通信的流程：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.建立与服务端的链接</span><br><span class="line">2.进行数据收发</span><br><span class="line">3.关闭链接</span><br></pre></td></tr></table></figure><p><em>粘包处理</em><br>出现”粘包”的关键在于接收方不确定将要传输的数据包的大小，因此我们可以对数据包进行封包和拆包的操作。<br>解决方法：自定义协议，如在数据包前加上数据长度开头</p><h3 id="UDP"><a href="#UDP" class="headerlink" title="UDP"></a><a href="https://www.topgoer.com/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/socket%E7%BC%96%E7%A8%8B/UDP%E7%BC%96%E7%A8%8B.html">UDP</a></h3><h3 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h3><ul><li>通常承载于TCP协议之上</li><li>Web服务器的工作原理可以简单地归纳为<ul><li>客户机通过TCP/IP协议建立到服务器的TCP连接</li><li>客户端向服务器发送HTTP协议请求包，请求服务器里的资源文档</li><li>服务器向客户机发送HTTP协议应答包，如果请求的资源包含有动态语言的内容，那么服务器会调用动态语言的解释引擎负责处理“动态内容”，并将处理得到的数据返回给客户端</li><li>客户机与服务器断开。由客户端解释HTML文档，在客户端屏幕上渲染图形结果</li></ul></li></ul><h3 id="WebSocket"><a href="#WebSocket" class="headerlink" title="WebSocket"></a>WebSocket</h3><ul><li>WebSocket是一种在单个TCP连接上进行全双工通信的协议</li><li>WebSocket使得客户端和服务器之间的数据交换变得更加简单，允许服务端主动向客户端推送数据</li><li>在WebSocket API中，浏览器和服务器只需要完成一次握手，两者之间就直接可以创建持久性的连接，并进行双向数据传输</li><li>需要安装第三方包：<ul><li>cmd中：go get -u -v github.com/gorilla/websocket</li></ul></li></ul>]]></content>
    
    
    <summary type="html">很基础，随便看看</summary>
    
    
    
    <category term="Engineer" scheme="https://float0108.github.io/categories/Engineer/"/>
    
    
    <category term="Internet" scheme="https://float0108.github.io/tags/Internet/"/>
    
  </entry>
  
  <entry>
    <title>Linux文件操作</title>
    <link href="https://float0108.github.io/Engineer/8a4e650f.html"/>
    <id>https://float0108.github.io/Engineer/8a4e650f.html</id>
    <published>2023-01-28T13:01:51.000Z</published>
    <updated>2023-03-11T19:05:54.544Z</updated>
    
    <content type="html"><![CDATA[<h1 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h1><h3 id="目录操作"><a href="#目录操作" class="headerlink" title="目录操作"></a>目录操作</h3><ol><li><code>ls</code> 打印当前目录下的文件名</li><li><code>cd &#123;dir&#125;</code> 打开文件夹</li><li><code>cd ..</code> 退回上级目录</li><li><code>cd  /</code>（退回最高级目录）</li><li><code>mkdir &#123;dir&#125;</code>创建文件夹</li><li><code>rm &#123;name&#125;</code> 删除文件</li></ol><h3 id="打印文件内容"><a href="#打印文件内容" class="headerlink" title="打印文件内容"></a>打印文件内容</h3><p><code>cat &#123;name&#125;</code></p><h3 id="打开文件"><a href="#打开文件" class="headerlink" title="打开文件"></a>打开文件</h3><p><code>vi &#123;name&#125;</code></p><h4 id="修改文件"><a href="#修改文件" class="headerlink" title="修改文件"></a>修改文件</h4><ol><li><p><code>/ &#123;keyword&#125;</code>，查找</p></li><li><p>通过命令进入文本输入模式，常用的命令如下：</p></li></ol><blockquote><p>① a 在光标之后开始输入文本<br>② A 在行尾开始输入文本<br>③ i 在光标之前开始输入文本<br>④ I 在行首第一个非空白字符前输入文本<br>⑤ o 在光标所在行后插入一空行<br>⑥ O 在光标所在行前插入一空行</p></blockquote><h4 id="保存退出"><a href="#保存退出" class="headerlink" title="保存退出"></a>保存退出</h4><p>修改好文件后，如果在文本输入模式下，首先按“ESC” 键进入命令模式，然后输入“:”，进入末行模式，在末行模式下，可使用如下退出命令：</p><blockquote><p>① q 是直接退出；<br>② wq 保存后退出；<br>③ q! 强制退出；<br>④ wq! 强制保存退出；</p></blockquote><h3 id="复制-移动-修改文件名"><a href="#复制-移动-修改文件名" class="headerlink" title="复制/移动/修改文件名"></a>复制/移动/修改文件名</h3><p><code>cp &#123;Source&#125; &#123;Dst&#125;</code></p><p><code>mv &#123;Source&#125; &#123;Dst&#125;</code></p><h3 id="解压缩"><a href="#解压缩" class="headerlink" title="解压缩"></a>解压缩</h3><p><code>tar -xvf &#123;filename&#125;</code></p>]]></content>
    
    
    <summary type="html">linux命令行</summary>
    
    
    
    <category term="Engineer" scheme="https://float0108.github.io/categories/Engineer/"/>
    
    
    <category term="Centos" scheme="https://float0108.github.io/tags/Centos/"/>
    
  </entry>
  
  <entry>
    <title>群晖docker部署Yunzai-Bot V3（原神qq机器人）</title>
    <link href="https://float0108.github.io/Engineer/19b0016d.html"/>
    <id>https://float0108.github.io/Engineer/19b0016d.html</id>
    <published>2023-01-27T18:09:00.000Z</published>
    <updated>2023-01-27T19:54:41.493Z</updated>
    
    <content type="html"><![CDATA[<h1 id="docker-linux"><a href="#docker-linux" class="headerlink" title="docker #linux"></a>docker #linux</h1><hr><p>大篇幅参考：</p><p><a href="https://www.bilibili.com/read/cv16393194">zh8416-Yunzai-Bot在群晖NAS中的搭建教程</a></p><p><a href="[https://github.com/Le-niao/Yunzai-Bot/issues/80](https://docs.yunzai.org/deploy/linux/Docker.html">Docker 部署</a>)</p><hr><p>本以为配置完go环境的我已经无坚不摧了，却还是（……）踩了很多坑（悲），终于搭好了，简单记录一下过程。（草，抄错链接了以为不能用，其实可能可以一键部署，我全是手动部署的，问题不大……）</p><h2 id="1-创建容器"><a href="#1-创建容器" class="headerlink" title="1. 创建容器"></a>1. 创建容器</h2><ul><li>在套件中心下载docker插件，并在注册表中查找centos双击下载，版本选择8.2.2004  <del>（好像可以选更新的，Centos8会导致接下来多一步操作，但是我是抄作业的，所以照抄了）</del></li></ul><p><del>虽然说可以创建两个容器分别是redis和yunzai而不是把两个程序都部署在centos上，但是这样后面管理插件之类的会很痛苦的，还是别这么干了，而且容器之间还得开端口通信……（头皮发麻）</del></p><ul><li>下载完成后，在映像中找到centos右键启动，勾选高权限执行容器</li></ul><p><strong>【！！重要！！】</strong><br>如果需要使用锅巴插件（可访问可视化后台管理页面），需要开启端口映射！！！创建时不开端口映射后面想加会很麻烦！！！<br>锅巴插件默认端口号（容器端口号）50831，映射界面可填写50831-50831-UDP，50831-50831-TCP，这样，把访问群晖的网址后的端口号5000改成50831即可访问锅巴后台。</p><ul><li>双击centos容器，进入终端机（命令行），开始配置环境</li></ul><h2 id="2-配置云崽本体"><a href="#2-配置云崽本体" class="headerlink" title="2. 配置云崽本体"></a>2. 配置云崽本体</h2><h3 id="1-配置Yum环境"><a href="#1-配置Yum环境" class="headerlink" title="1. 配置Yum环境"></a>1. 配置Yum环境</h3><p>版本号高于8的可以跳过这一步</p><h4 id="进入yum目录"><a href="#进入yum目录" class="headerlink" title="进入yum目录"></a>进入yum目录</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /etc/yum.repos.d/</span><br></pre></td></tr></table></figure><h4 id="更换下载源"><a href="#更换下载源" class="headerlink" title="更换下载源"></a>更换下载源</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sed -i &#x27;s/mirrorlist/#mirrorlist/g&#x27; /etc/yum.repos.d/CentOS-*</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sed -i &#x27;s|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g&#x27; /etc/yum.repos.d/CentOS-*</span><br></pre></td></tr></table></figure><h4 id="更新设置（这一步要等一会）"><a href="#更新设置（这一步要等一会）" class="headerlink" title="更新设置（这一步要等一会）"></a>更新设置（这一步要等一会）</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum update -y</span><br></pre></td></tr></table></figure><h4 id="回到根目录"><a href="#回到根目录" class="headerlink" title="回到根目录"></a>回到根目录</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /</span><br></pre></td></tr></table></figure><h3 id="2-配置云崽依赖和本体"><a href="#2-配置云崽依赖和本体" class="headerlink" title="2. 配置云崽依赖和本体"></a>2. 配置云崽依赖和本体</h3><h4 id="一键部署"><a href="#一键部署" class="headerlink" title="一键部署"></a>一键部署</h4><p>可以先试一下这个：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -sSL http://yunzai.org/install_v3)</span><br></pre></td></tr></table></figure></p><h4 id="手动部署"><a href="#手动部署" class="headerlink" title="手动部署"></a>手动部署</h4><p>如果能用的话以下都可以跳过，如果不能用的话就手动部署。</p><h5 id="安装Nodejs"><a href="#安装Nodejs" class="headerlink" title="安装Nodejs"></a>安装Nodejs</h5><p>（如果报错的话可以再输一次更新下载源的两条命令试试）<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install -y dnf</span><br><span class="line">dnf module install nodejs:16 -y</span><br></pre></td></tr></table></figure></p><p>安装 git<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum -y install git</span><br></pre></td></tr></table></figure></p><p>安装并运行 redis<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum -y install redis &amp;&amp; redis-server --daemonize yes</span><br></pre></td></tr></table></figure></p><p>克隆项目（国内镜像链接）<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone --depth=1 -b main https://gitee.com/Le-niao/Yunzai-Bot.git</span><br></pre></td></tr></table></figure></p><p>安装模块<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd Yunzai-Bot</span><br></pre></td></tr></table></figure></p><p>安装 pnpm<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install pnpm -g</span><br></pre></td></tr></table></figure></p><p>安装依赖<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pnpm install -P</span><br></pre></td></tr></table></figure></p><p>安装 chrome 依赖库<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install pango.x86_64 libXcomposite.x86_64 libXcursor.x86_64 libXdamage.x86_64 libXext.x86_64 libXi.x86_64 libXtst.x86_64 cups-libs.x86_64 libXScrnSaver.x86_64 libXrandr.x86_64 GConf2.x86_64 alsa-lib.x86_64 atk.x86_64 gtk3.x86_64 -y &amp;&amp; yum install libdrm libgbm libxshmfence -y &amp;&amp; yum install nss -y &amp;&amp; yum update nss -y</span><br></pre></td></tr></table></figure></p><p>安装中文字体<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum groupinstall fonts -y</span><br></pre></td></tr></table></figure></p><h2 id="3-云崽使用和插件安装"><a href="#3-云崽使用和插件安装" class="headerlink" title="3. 云崽使用和插件安装"></a>3. 云崽使用和插件安装</h2><h3 id="使用指令"><a href="#使用指令" class="headerlink" title="使用指令"></a>使用指令</h3><p>前台运行指令（第一次需要登录）<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node app</span><br></pre></td></tr></table></figure></p><p>后台运行/停止指令（如果在/Yunzai-Bot目录下）<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm start</span><br><span class="line">npm stop</span><br></pre></td></tr></table></figure></p><p>重启服务器/docker/容器时，（容器在根目录），后台运行指令：<br>（重启时需要重新打开redis服务）<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">redis-server --save 900 1 --save 300 10 --daemonize yes</span><br><span class="line">npm -prefix=/Yunzai-Bot start</span><br></pre></td></tr></table></figure></p><p>以上指令可匹配开机计划任务自定义脚本：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sleep 300;sudo docker exec [container id] redis-server --save 900 1 --save 300 10 --daemonize yes;sudo docker exec [container id] npm -prefix=/Yunzai-Bot start</span><br></pre></td></tr></table></figure></p><h3 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h3><p><a href="https://gitee.com/yhArcadia/Yunzai-Bot-plugins-index">https://gitee.com/yhArcadia/Yunzai-Bot-plugins-index</a></p><h4 id="喵喵插件"><a href="#喵喵插件" class="headerlink" title="喵喵插件"></a><a href="https://gitee.com/yoimiya-kokomi/miao-plugin">喵喵插件</a></h4><p>重要，涉及很多好用的附加功能，建议安装</p><ul><li><p>喵喵插件安装命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone --depth 1 -b master https://gitee.com/yoimiya-kokomi/miao-plugin.git ./plugins/miao-plugin/</span><br></pre></td></tr></table></figure></li><li><p>喵喵依赖安装命令： </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pnpm add image-size -w</span><br></pre></td></tr></table></figure></li><li><p>帮助菜单命令： <code>#喵喵菜单</code></p></li><li><p>插件设置命令： <code>#喵喵设置</code></p></li><li><p>推荐执行： <code>#喵喵更新图像</code> 以及 <code>#喵喵设置帮助 开启</code></p></li></ul><h4 id="锅巴插件"><a href="#锅巴插件" class="headerlink" title="锅巴插件"></a><a href="https://gitee.com/guoba-yunzai/guoba-plugin">锅巴插件</a></h4><p>很重要！涉及可视化的后台管理界面，强烈建议安装</p><ul><li><p>锅巴插件安装命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone --depth=1 https://gitee.com/guoba-yunzai/guoba-plugin.git ./plugins/Guoba-Plugin/</span><br></pre></td></tr></table></figure></li><li><p>锅巴依赖安装命令： </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pnpm install --no-lockfile --filter=guoba-plugin -w</span><br></pre></td></tr></table></figure></li><li><p>外网登录的话需要在服务器后台放行端口，具体看 <code>#锅巴帮助</code></p></li><li><p>帮助菜单命令： <code>#锅巴帮助</code></p></li></ul><h4 id="逍遥插件-图鉴插件"><a href="#逍遥插件-图鉴插件" class="headerlink" title="逍遥插件(图鉴插件)"></a><a href="https://gitee.com/Ctrlcvs/xiaoyao-cvs-plugin">逍遥插件(图鉴插件)</a></h4><p>涉及图鉴，选装</p><ul><li><p>逍遥插件安装命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone --depth=1 https://gitee.com/Ctrlcvs/xiaoyao-cvs-plugin.git ./plugins/xiaoyao-cvs-plugin/</span><br></pre></td></tr></table></figure></li><li><p>逍遥依赖安装命令： </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pnpm add promise-retry -w</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pnpm add superagent -w</span><br></pre></td></tr></table></figure><ul><li><p>安装完需要先 <code>#图鉴更新</code> 一次</p></li><li><p>帮助菜单命令： <code>#图鉴菜单</code></p></li><li><p>插件设置命令： <code>#图鉴设置</code></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;docker-linux&quot;&gt;&lt;a href=&quot;#docker-linux&quot; class=&quot;headerlink&quot; title=&quot;docker #linux&quot;&gt;&lt;/a&gt;docker #linux&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;大篇幅参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;</summary>
      
    
    
    
    <category term="Engineer" scheme="https://float0108.github.io/categories/Engineer/"/>
    
    
  </entry>
  
  <entry>
    <title>Golang爬取qq空间说说</title>
    <link href="https://float0108.github.io/Codes/b854aa89.html"/>
    <id>https://float0108.github.io/Codes/b854aa89.html</id>
    <published>2023-01-27T09:45:50.000Z</published>
    <updated>2023-02-14T04:17:49.395Z</updated>
    
    <content type="html"><![CDATA[<h1 id="web-golang"><a href="#web-golang" class="headerlink" title="web #golang"></a>web #golang</h1><p>第一次的Golang代码！纪念一下~~（chromedp就这么冷门吗资料都好难找…这波是被迫99%原创了（？</p><p>主要内容是：</p><ol><li><p>载入网页，等待用户登录，检测到登录后开始爬取</p></li><li><p>进入说说页面先检查总页数，跳转到用户需求的起始页，开始爬取</p></li><li><p>根据我的观察（？），qq空间网页结构如下：</p></li></ol><blockquote><ol><li>li[@class=’feed’] 存储了每一个说说/转发单元</li><li>（feed的下一层）/div[@class=’box bgr3’]<br> i. /div[@class=’bd’]存储了说说本体/转发内容<pre><code>     /pre[@class=&#39;content&#39; and @style=&#39;display:inline&#39;]存储了文字信息</code></pre> ii. /div[@class=’md rt_content’]存储了转发信息（如果名字为’md’，就是原创内容）<pre><code>     /div[@class=&#39;quote bor2&#39;]         /div[@class=&#39;bd&#39;] 文字信息             /a content是转发者信息，profileuin是转发者的QQ号             /pre[@style=&#39;display:inline&#39;] 存储文字信息         /div[@class=&#39;md&#39;] 图片信息             /a href中是转发图片的直链</code></pre> iii. /div[@class=’ft’]<pre><code>     /span[@class=&#39;c_tx3&#39;]         /a title是时间码（形如：2023年1月3日 19:45）</code></pre> iv. /div[@class=’box_extra bor3’]//此处先不做了好麻烦（）<pre><code>     /div[@class=&#39;feed_like&#39;]         /a 可能有多个，是列举的点赞者和人数（形如：292人）     /div[@class=&#39;mod_comment&#39;]         /div[@class=&#39;mod_comments&#39;]             /ul （以下每一组评论是一个Bor）                 //a[@class=&quot;nickname&quot;] content是昵称，href包含qq号信息                 //span[@style=&quot;]</code></pre></li></ol></blockquote><ol><li><p>根据这个结构，先找到每个说说节点，即Xpath为<code>.//div[@class=&#39;box bgr3&#39;]</code>，然后在其子结点中分别提取说说内容、时间码即可形成简单的日志。想要过滤转发的说说，故对div[2]以class属性为md和md rt_content进行区分即可。</p></li><li><p>希望体验一下Go语言知名的Goroutine并发，故把数据的处理、处理的数据生成日志两个步骤分配给独立线程。由于qzone本身需要ck登录才能使用，所以多线爬取也会被快速关黑屋（访问人数过多），这里就没有尝试代理池x<br>具体的内容就是read线程用来连续从网页爬取数据，把数据塞进textChannel，output线程时刻监听textChannel的动向、每收集50条说说（如果读取到结束信号，则不满50条说说也操作）就启动一个go线程（toFile）生成一个文件。</p></li><li><p>就效果来说感觉相当满意了！大约120页左右还是被关了小黑屋就是了（小声）可能多sleep会更安全吧~不过120页我觉得是个能接受的程度了~速度的话也比Python-Selenium快很多！<br>不足的话就是没有做超时刷新，一旦卡住就会出问题（不过chromedp稳定性还是挺不错的），等有空了就加上x</p></li><li><p>总体的体验就是：这库是真难用啊啊啊！不过写这个还是很有趣~明后天就来做漫画爬取的golang版本~动态网页还是爬取上比较麻烦呢（叹气）<br>细说这个难用，啊啊啊啊啊啊啊啊，啊啊啊啊啊（无意义的悲鸣），你这怎么把函数放在参数表里运行当常态，痛苦<br>比如说webEngine创建好了以后，python-Selenium可以直接webEngine.get(url)，就是get()是引擎类的类函数，但是这里所有相关engine的操作都是要“嵌套”的，这里要用chromedp.run(webEngine, xxxxxxx,xxxxxxx)（xxxx就是所有要运行的函数）。这样看还好，但是导致一个问题，这些函数的返回值都是函数参数，比如我查找一个元素它就不能直接把这个元素返回到左值，而是要先定义一个元素变量把地址传给找元素的函数……带来很多没必要的麻烦（我并不能体会到这种写法的好处……还是更喜欢把这种常用的、有返回值、和类紧密相关的函数写成类函数）<br>不过最后还是写完了！很开心！总之就是非常开心！&gt;w&lt;</p></li></ol><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;context&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line"><span class="string">&quot;os&quot;</span></span><br><span class="line"><span class="string">&quot;strconv&quot;</span></span><br><span class="line"><span class="string">&quot;strings&quot;</span></span><br><span class="line"><span class="string">&quot;sync&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;github.com/chromedp/cdproto/cdp&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/chromedp/chromedp&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/chromedp/chromedp/kb&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 全局变量</span></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">qqID     <span class="type">string</span> = <span class="string">&quot;2498742177&quot;</span></span><br><span class="line">savePath <span class="type">string</span> = <span class="string">&quot;F:/Temp&quot;</span></span><br><span class="line">docRange <span class="type">int</span>    = <span class="number">50</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">ctx context.Context</span><br><span class="line">wg  sync.WaitGroup</span><br><span class="line">) <span class="comment">//每篇容量为50条说说,如果完成则不满50条说说也输出</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">url := <span class="string">&quot;https://user.qzone.qq.com/&quot;</span> + qqID + <span class="string">&quot;/311&quot;</span></span><br><span class="line">fmt.Println(<span class="string">&quot;please log in&quot;</span>) <span class="comment">//正在加载页面</span></span><br><span class="line">visit(url)                   <span class="comment">//初次加载</span></span><br><span class="line">deal(<span class="number">254</span>, <span class="number">999</span>)               <span class="comment">//需要加载的范围(第二个值如果过大，会自动修正为最后一页)</span></span><br><span class="line">wg.Wait()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">deal</span><span class="params">(start <span class="type">int</span>, end <span class="type">int</span>)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">pageNum := ini_load()</span><br><span class="line"></span><br><span class="line"><span class="comment">//规范化输入</span></span><br><span class="line"><span class="keyword">if</span> start &lt; <span class="number">1</span> &#123;</span><br><span class="line">start = <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> end &gt; pageNum || end &lt; start &#123;</span><br><span class="line">end = pageNum</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">textChan := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">string</span>, <span class="number">100000</span>)</span><br><span class="line">wg.Add(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">go</span> output(textChan) <span class="comment">//创建一个进程，用来处理输出的文本</span></span><br><span class="line"></span><br><span class="line">turnToPage(start)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := start; i &lt;= end; i++ &#123;</span><br><span class="line">load()</span><br><span class="line">read(textChan)</span><br><span class="line">time.Sleep(<span class="number">1</span> * time.Second)</span><br><span class="line">nextPage()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> i == end &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;all pages have been read. &quot;</span>)</span><br><span class="line">textChan &lt;- <span class="string">&quot;end&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">visit</span><span class="params">(url <span class="type">string</span>)</span></span> &#123;</span><br><span class="line">err := chromedp.Run(ctx,</span><br><span class="line">chromedp.Navigate(url),</span><br><span class="line">chromedp.WaitVisible(<span class="string">`#app_canvas_frame`</span>, chromedp.ByID))</span><br><span class="line">check(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ini_load</span><span class="params">()</span></span> <span class="type">int</span> &#123;</span><br><span class="line">time.Sleep(<span class="number">2</span> * time.Second)</span><br><span class="line">i := <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">i++</span><br><span class="line"><span class="keyword">var</span> str <span class="type">string</span></span><br><span class="line">err := chromedp.Run(ctx,</span><br><span class="line">chromedp.Evaluate(<span class="string">&quot;window.scrollBy(0,1000)&quot;</span>, <span class="literal">nil</span>),</span><br><span class="line">chromedp.Sleep(time.Second),</span><br><span class="line">chromedp.TextContent(<span class="string">`.//a[@title=&quot;末页&quot;]`</span>, &amp;str)) <span class="comment">//找到最大页数</span></span><br><span class="line">check(err)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(str) != <span class="number">0</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;total page: &quot;</span> + str)</span><br><span class="line">fmt.Println(<span class="string">&quot;initializing completed&quot;</span>)</span><br><span class="line">pageNum, _ := strconv.Atoi(str)</span><br><span class="line"><span class="keyword">return</span> pageNum</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> i &gt; <span class="number">10</span> &#123;</span><br><span class="line">err = fmt.Errorf(<span class="string">&quot;scroll error: can&#x27;t find pageEnd&quot;</span>)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">load</span><span class="params">()</span></span> &#123;</span><br><span class="line">time.Sleep(<span class="number">2</span> * time.Second)</span><br><span class="line">i := <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">i++</span><br><span class="line"><span class="keyword">var</span> str <span class="type">string</span></span><br><span class="line">err := chromedp.Run(ctx,</span><br><span class="line">chromedp.Evaluate(<span class="string">&quot;window.scrollBy(0,1000)&quot;</span>, <span class="literal">nil</span>),</span><br><span class="line">chromedp.Sleep(time.Second),</span><br><span class="line">chromedp.TextContent(<span class="string">`.//p[@class=&quot;mod_pagenav_main&quot;]/span[@class=&quot;current&quot;]/span`</span>, &amp;str))</span><br><span class="line">check(err)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(str) != <span class="number">0</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;* current page: &quot;</span> + str)</span><br><span class="line">fmt.Println(<span class="string">&quot;loading completed&quot;</span>)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> i &gt; <span class="number">10</span> &#123;</span><br><span class="line">err = fmt.Errorf(<span class="string">&quot;scroll error: can&#x27;t find pageEnd&quot;</span>)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">read</span><span class="params">(textChan <span class="keyword">chan</span> <span class="type">string</span>)</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;reading...&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> nodes []*cdp.Node</span><br><span class="line"></span><br><span class="line">err := chromedp.Run(ctx,</span><br><span class="line"><span class="comment">// chromedp.Evaluate(`document.getElementsByClassName(&#x27;app_canvas_frame&#x27;)[0].contentWindow.document.body.outerHTML;`, nil),</span></span><br><span class="line">chromedp.Sleep(time.Second),</span><br><span class="line">chromedp.Nodes(<span class="string">`.//div[@class=&#x27;box bgr3&#x27;]`</span>, &amp;nodes),</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">check(err)</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">&quot;total: &quot;</span>, <span class="built_in">len</span>(nodes))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, node := <span class="keyword">range</span> nodes &#123; <span class="comment">//对于每个找到的说说节点</span></span><br><span class="line"></span><br><span class="line">path := node.FullXPath()</span><br><span class="line">path = path[strings.Index(path, <span class="string">&quot;//&quot;</span>)+<span class="number">2</span>:] <span class="comment">//去除iframe前面的内容</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> text <span class="type">string</span></span><br><span class="line"><span class="keyword">var</span> share <span class="type">string</span></span><br><span class="line"><span class="keyword">var</span> date <span class="type">string</span></span><br><span class="line"></span><br><span class="line">textPath := path + <span class="string">&quot;/div[2]/pre&quot;</span>        <span class="comment">//子节点地址2：text</span></span><br><span class="line">sharePath := path + <span class="string">&quot;/div[3]&quot;</span>           <span class="comment">//子节点地址3：share(转发则该元素class为md rt_content)</span></span><br><span class="line">datePath := path + <span class="string">&quot;/div[4]/div/span/a&quot;</span> <span class="comment">//子节点地址4：date</span></span><br><span class="line"></span><br><span class="line">err = chromedp.Run(ctx,</span><br><span class="line">chromedp.TextContent(textPath, &amp;text),</span><br><span class="line">chromedp.AttributeValue(sharePath, <span class="string">&quot;class&quot;</span>, &amp;share, <span class="literal">nil</span>),</span><br><span class="line">chromedp.AttributeValue(datePath, <span class="string">&quot;title&quot;</span>, &amp;date, <span class="literal">nil</span>),</span><br><span class="line">)</span><br><span class="line">check(err)</span><br><span class="line"></span><br><span class="line">wg.Add(<span class="number">1</span>) <span class="comment">//启动进程进行登记</span></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> wg.Done()                  <span class="comment">//进程结束进行登记</span></span><br><span class="line"><span class="keyword">if</span> text != <span class="string">&quot;&quot;</span> &amp;&amp; share == <span class="string">&quot;md&quot;</span> &#123; <span class="comment">//如果文本为空或来源于转发，则跳过以下步骤</span></span><br><span class="line">textChan &lt;- <span class="string">&quot;&lt;!-- node &quot;</span> + date + <span class="string">&quot;--&gt;\n\n&quot;</span> + text + <span class="string">&quot;\n\n&quot;</span> <span class="comment">//开一个进程进行输出</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">turnToPage</span><span class="params">(i <span class="type">int</span>)</span></span> &#123;</span><br><span class="line">err := chromedp.Run(ctx,</span><br><span class="line">chromedp.SendKeys(<span class="string">`.//span[@class=&quot;mod_pagenav_turn&quot;]/input`</span>, strconv.Itoa(i)+kb.Enter),</span><br><span class="line"><span class="comment">// chromedp.Click(`//a[@title=&#x27;下一页&#x27;]`),</span></span><br><span class="line">)</span><br><span class="line">check(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">nextPage</span><span class="params">()</span></span> &#123;</span><br><span class="line">err := chromedp.Run(ctx,</span><br><span class="line">chromedp.Click(<span class="string">`//a[@title=&#x27;下一页&#x27;]`</span>),</span><br><span class="line">)</span><br><span class="line">check(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">output</span><span class="params">(textChan <span class="keyword">chan</span> <span class="type">string</span>)</span></span> &#123;</span><br><span class="line"><span class="comment">//该进程唯一（保证顺序）</span></span><br><span class="line"><span class="keyword">defer</span> wg.Done()</span><br><span class="line"></span><br><span class="line">doc := <span class="string">&quot;&quot;</span></span><br><span class="line">k := <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; ; &#123;</span><br><span class="line">item, _ := &lt;-textChan <span class="comment">//等待从通道中获取值</span></span><br><span class="line"><span class="keyword">if</span> item == <span class="string">&quot;end&quot;</span> &#123;</span><br><span class="line">k++</span><br><span class="line">wg.Add(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">go</span> toFile(doc, &amp;k)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> i &lt; <span class="number">49</span> &#123;</span><br><span class="line">i++</span><br><span class="line">doc = doc + item</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">k++</span><br><span class="line">wg.Add(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">go</span> toFile(doc, &amp;k)</span><br><span class="line">doc = <span class="string">&quot;&quot;</span></span><br><span class="line">i = <span class="number">0</span> <span class="comment">//初始化</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">toFile</span><span class="params">(doc <span class="type">string</span>, k *<span class="type">int</span>)</span></span> &#123;</span><br><span class="line"><span class="comment">//该进程可多发</span></span><br><span class="line"><span class="keyword">defer</span> wg.Done()</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> fileSavePath <span class="type">string</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">fileSavePath = savePath + <span class="string">&quot;/qzone(&quot;</span> + strconv.Itoa(*k) + <span class="string">&quot;).md&quot;</span></span><br><span class="line">_, err := os.Stat(fileSavePath)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">*k++</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="comment">//如果文件重名，则一直尝试到不重名</span></span><br><span class="line"></span><br><span class="line">doc = <span class="string">&quot;---\ntitle: qzone(&quot;</span> + strconv.Itoa(*k) + <span class="string">&quot;)\nlayout: wiki\nwiki: dynamic\ntype: dynamic\norder:\n---\n&quot;</span> + <span class="string">&quot;&#123;% timeline %&#125;\n\n&quot;</span> + doc + <span class="string">&quot;&#123;% endtimeline %&#125;&quot;</span></span><br><span class="line"></span><br><span class="line">file, err := os.OpenFile(fileSavePath, os.O_WRONLY|os.O_CREATE, <span class="number">0644</span>) <span class="comment">// 以写|创建的方式打开目标文件</span></span><br><span class="line">check(err)</span><br><span class="line"></span><br><span class="line"><span class="keyword">defer</span> file.Close()</span><br><span class="line"></span><br><span class="line">file.WriteString(doc)</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">&quot;- file &quot;</span> + strconv.Itoa(*k) + <span class="string">&quot; has been written. &quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123; <span class="comment">//初始化chromedp</span></span><br><span class="line">headlessFlag := chromedp.Flag(<span class="string">&quot;headless&quot;</span>, <span class="literal">false</span>) <span class="comment">//有头模式</span></span><br><span class="line">opts := <span class="built_in">append</span>(</span><br><span class="line">chromedp.DefaultExecAllocatorOptions[:],</span><br><span class="line">chromedp.NoDefaultBrowserCheck,                               <span class="comment">//不检查默认浏览器</span></span><br><span class="line">headlessFlag,                                                 <span class="comment">//无头</span></span><br><span class="line">chromedp.IgnoreCertErrors,                                    <span class="comment">//忽略错误</span></span><br><span class="line">chromedp.Flag(<span class="string">&quot;blink-settings&quot;</span>, <span class="string">&quot;imagesEnabled=false&quot;</span>),       <span class="comment">//不加载gif图像 因为有可能会卡住</span></span><br><span class="line">chromedp.DisableGPU,                                          <span class="comment">//关闭GPU渲染</span></span><br><span class="line">chromedp.NoSandbox,                                           <span class="comment">//不适用谷歌的sanbox模式运行</span></span><br><span class="line">chromedp.NoFirstRun,                                          <span class="comment">//设置网站不是首次运行</span></span><br><span class="line">chromedp.Flag(<span class="string">&quot;disable-web-security&quot;</span>, <span class="literal">true</span>),                  <span class="comment">//禁用网络安全标志</span></span><br><span class="line">chromedp.Flag(<span class="string">&quot;disable-extensions&quot;</span>, <span class="literal">true</span>),                    <span class="comment">//关闭插件支持</span></span><br><span class="line">chromedp.Flag(<span class="string">&quot;disable-default-apps&quot;</span>, <span class="literal">true</span>),                  <span class="comment">//关闭默认浏览器检查</span></span><br><span class="line">chromedp.WindowSize(<span class="number">1280</span>, <span class="number">1024</span>),                              <span class="comment">//初始大小</span></span><br><span class="line">chromedp.Flag(<span class="string">&quot;run-all-compositor-stages-before-draw&quot;</span>, <span class="literal">true</span>), <span class="comment">//在呈现所有数据之前防止创建Pdf</span></span><br><span class="line">chromedp.UserAgent(<span class="string">`Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36`</span>), <span class="comment">//设置UserAgent</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">allocCtx, _ := chromedp.NewExecAllocator(context.Background(), opts...)</span><br><span class="line">ctx, _ = chromedp.NewContext(</span><br><span class="line">allocCtx,</span><br><span class="line">chromedp.WithLogf(log.Printf),</span><br><span class="line">)</span><br><span class="line">chromedp.Run(ctx, <span class="built_in">make</span>([]chromedp.Action, <span class="number">0</span>, <span class="number">1</span>)...) <span class="comment">//打开，但是什么都不干</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">check</span><span class="params">(err <span class="type">error</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;web-golang&quot;&gt;&lt;a href=&quot;#web-golang&quot; class=&quot;headerlink&quot; title=&quot;web #golang&quot;&gt;&lt;/a&gt;web #golang&lt;/h1&gt;&lt;p&gt;第一次的Golang代码！纪念一下~~（chromedp就这么冷门吗资料</summary>
      
    
    
    
    <category term="Codes" scheme="https://float0108.github.io/categories/Codes/"/>
    
    
    <category term="web" scheme="https://float0108.github.io/tags/web/"/>
    
    <category term="golang" scheme="https://float0108.github.io/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>回来的女儿</title>
    <link href="https://float0108.github.io/Drama-TVdrama/901aa4a4.html"/>
    <id>https://float0108.github.io/Drama-TVdrama/901aa4a4.html</id>
    <published>2023-01-16T17:25:36.000Z</published>
    <updated>2023-01-21T18:53:25.399Z</updated>
    
    <content type="html"><![CDATA[<p>推荐：4/5<br>标签：家庭/悬疑<br>简介：讲述了20世纪90年代的潭岭小镇，失踪与伤害案件频发。为找寻失踪好友小秀，孤女陈佑希逃离孤儿院，却阴差阳错成为李家失踪多年的女儿，意外撞见这个家不可说的秘密的故事。</p><p>简评：缺一不可的一个又一个大小事件促成必然的结果（悲）</p><h2 id="剧透篇"><a href="#剧透篇" class="headerlink" title="剧透篇"></a>剧透篇</h2><ul><li><p>我趣，演员各个演技爆表了！张子枫这个发型感觉蠢蠢的哈哈哈哈（x）但是演得好棒！</p></li><li><p>剧情的复杂程度和长度相当匹配，不会感觉特别拖节奏，情节发展上也是有意外有合理。当我看到女主被关进去精神病院的时候，我真的觉得不知所措了（）</p></li><li><p>关于老李<br>  前半程其实一直觉得很心疼老父亲，有点希望小秀的事情真的是傻哥哥酿成的悲伤的意外，希望如实地呈现给警方，或者女主就在这个家里生活下去……后来大跌眼镜。（博主看男人的眼光还是一如既往的差.jpg）……啊啊啊啊把我的感动还给我……</p><p>  就是<br>  我觉得教自行车啊。买蛋糕啊。送孩子上学啊。什么的。这都很能共鸣啊。感觉我爸也差不多是这样吧。怎么说呢，那种明明经济并不富裕但是为了孩子愿意付出很多的我总是莫名其妙地心里一缩（当然啦，很多的爱有时候也会带来对子女的更多的期待、、期望、、甚至会成为枷锁……那就是另一个话题），啊啊啊啊啊……QAQ，我感觉我爸就是那种在这个情境下会给我蛋糕all in的类型</p><p>  怎么说呢，我觉得有些对子女的爱啊。还真的是。像是不需要理由的存在。有时候也会有点迷茫，血缘在亲情里的具体意义。如果不是认为有血缘，女主也不能被这样对待吧，可是如果认为没有血缘也愿意待在一起的话，那这种感情该怎么说明……如果李文文回来的话，看到女主又会怎么想……之类的（？）<br>  这对我不是很新鲜的想法就是了（）我有时候也会想着，啊啊我真是不肖女啊，如果我爸的女儿是别人来做的话很可能比我做的更好吧……我爸是很爱我对我期待也很高的类型，他自己很努力也觉得我应该要很努力，但是我是个咸鱼性格（悲）……</p><p>  噢，不过我很快就没有余地想这些乱七八糟的东西了，因为老父亲和我想象的也完全不一样……&amp;<br>  所以发现这个父亲这么吓人的时候我真的！啊啊啊啊啊（啸叫）</p><p>  好像也合理，被欺负久了的老实人，自卑的种子在心里深植，这一点甚至可以说是第一集就讲清楚了，老父亲别扭地问妻子是不是她在后悔没有选择王重江……</p><p>  怎么说，我还是受不了，。而且我看了这么多年悬疑小故事，我真的觉得杀人这种事情一旦开始，人就会异化的，就像一旦开始抄作业就会觉得“啊原来还可以这样解决问题！”然后每次看到作业都想抄（尽量浅淡的说法呢……），，唉<br>  而且<br>  对小孩子下手也太过分了，这样欺骗亲近的人也太恐怖了……会觉得背后好冷的程度……<br>  还真是他妻子说的那样呢<br>  看起来深爱着谁，其实最爱的是他自己……什么的</p><p>  就是 这推车业务也太不熟练了吧？而且推的时候到底咋想的，是不是早就想到会被发现想推给程威啊……救命……可是如果他真的没想过帮小孩子担责任，他完全可以不要推这个车，这样自己根本就不沾这件事情……或者只是想法在犹豫之间改变了吧。我不是很明白。</p></li><li><p>关于廖<br>  基本上就是刻画了一个为了傻儿子不顾一切的母亲<br>  剧情进入后半开始激情降智，难绷……就解释成因为儿子过于激动无法思考吧（唉<br>  其实前半我一直在想怎么能这样啊，一边一边的对两边都好过分啊，。。我妈好像就比我能理解一点，但我完全不行，我就是觉得她要不就放弃一边……（强加一点我的伦理观？）可是真的很痛苦啊<br>  在两个床之间辗转不好吧。可是看样子好像和老李也是分床睡。<br>  我搞不懂啊。<br>  如果是我……我的想法就是，优柔寡断就会什么都得不到的。唉。<br>  所以王重江怎么干嘛抛弃她又找回她啊？？</p><p>  还有那个，把一个好好的小姑娘关进精神病院真的好恐怖，她明明说什么都不愿意自己的儿子去精神病院，可是对女主……啊啊啊啊啊啊啊（悲）</p></li><li><p>王重江<br>  搞保健品的……（后仰）但是对廖女士是恋爱脑<br>  这两个人其实行为逻辑都还蛮简单的。。。</p></li><li><p>女主&amp;程威<br>  呃，我就是说你们不要指望两个普通的小孩能做到什么特了不起的事情，真的就是普通的青少年而已……不是名侦探之类的存在……冲动也有的，鲁莽也有的，对法律不知界限也是有的……</p><p>  不过从我的个人好恶来看，不是很能接受拿枪弄棒的脾气（退）我属于是在家教环境下极其排斥肢体冲突的类型呢……<br>  弹幕里怎么刷讨厌女主，把一切都怪在女主回家身上我也是不太理解的……事情本来就是那么些个事情，女主也没有伤害谁的恶意，她开始只是想知道真相，后来是想守护也守护过她的程威罢了……</p><p>  要说迷惑的话，可能在知道推车真相以后她立刻回去找廖女士讨论，说很恨老李让我觉得有一点没反应过来，说实话妹妹你们在抛下老王的时候本来不就是一副杀了人也没办法的态度了吗（就算真的觉得还能活你们会报警吗），……，反正我觉得一下子变得那么生气是我有点没想到的。至少还得等老李的残忍的一面更明显一些？然后寻找证据的方式也属于让我大开眼界……<br>  （不过我也就是纸上谈兵罢了x</p></li><li><p>一些没想明白的东西</p><ul><li>关于DNA证明<br>  虽然我不是很确认啊。就是说这个东西是小程去偷换了搞出来亲子鉴定的结果，然后先是廖女士看到了，廖女士很明确地知道女主绝对不是她女儿（洗衣机），所以直到精神病院那里才拿出来用，那时候老李也看到了（？？？），可是不久前老李才看到女主脸上假的痣<br>  我有点懵，有点好奇老李怎么看待这个报告（因为理论上不能造假呀），不过从态度来讲，看到痣以后老李完全就是一副反正你也不是我亲女儿的样子……</li><li>关于帮忙保管鱼饵的店的老板<br>  那哥们好像被打晕了，他后面没事吗（我本来以为要血案+1的……害怕极了）</li><li>所以王重江和小秀到底是怎么回事啊（大雾）还有那片子后面为什么是廖女士独白啊，是王重江有意的吗（？）</li><li>好像还有，但是我忘了，想起来再说吧…</li><li>啊啊啊啊啊啊啊洗衣机我趣，真的好恐怖……让我想起来看的一个什么和洗衣机有关的人格分裂的故事&amp;好像以前在萌芽也看过一个和洗衣机有关的，反正都好吓人。呜呜……</li></ul></li><li><p>总的来说<br>  不能说对我是没什么触动的。唉。<br>  家庭这个tag打在悬疑前面完全没问题（悲）</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;推荐：4/5&lt;br&gt;标签：家庭/悬疑&lt;br&gt;简介：讲述了20世纪90年代的潭岭小镇，失踪与伤害案件频发。为找寻失踪好友小秀，孤女陈佑希逃离孤儿院，却阴差阳错成为李家失踪多年的女儿，意外撞见这个家不可说的秘密的故事。&lt;/p&gt;
&lt;p&gt;简评：缺一不可的一个又一个大小事件促成必然的</summary>
      
    
    
    
    <category term="Drama/TVdrama" scheme="https://float0108.github.io/categories/Drama-TVdrama/"/>
    
    
  </entry>
  
  <entry>
    <title>关于皮套&amp;直播的一些</title>
    <link href="https://float0108.github.io/Daily/d0ed31bf.html"/>
    <id>https://float0108.github.io/Daily/d0ed31bf.html</id>
    <published>2023-01-12T17:25:36.000Z</published>
    <updated>2023-01-23T19:25:36.716Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0"><a href="#0" class="headerlink" title="0"></a>0</h3><p>开始觉得有点无聊和烦躁了，故.,.（大量删减的聊天记录在2#）有亲友陪着我真的太好了！</p><p>不能说是完全没有套皮出道试试的想法吧，但是发现毫无心理准备的我对于这种事情来说还是<strong>太脆弱了</strong>（）</p><p>就结论而言，（尤其寒假之后）直播的时间会大幅减少……（不如说我以后预期是只偶尔做每周1-2次的<strong>歌回</strong>，其他内容纯看心情）寒假的话，由于最近心情的原因可能也会取消歌回（约22.00）以外的内容。基本确保能每天直播的时间大约到两位三次元不认识的舰长过期为止~</p><p>原因的话…</p><p>差不多两个原因五五开？……</p><h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><p>一方面是<strong>内容上的固执</strong>。</p><p>就是，我不知道到底播什么了。（）</p><p>也想试试玩别的游戏，想试试以“面对着他人”的姿态玩游戏去直播，但是发现自己其实做不到。喜欢的就是喜欢，没那么喜欢的就是没那么喜欢，……</p><p>我确实是文字游戏博主哦。也想试着玩玩别的游戏的，但是就是觉得没有文字游戏好玩呀。就算我玩游戏对每个游戏有这样那样的看法，当别人问我推荐“神作”的时候犹豫很久很久，但是我还是喜欢这件事情呀，我喜欢故事远远胜过玩法……纯粹玩法的游戏，我也不是不能感觉到好玩，可是故事要吸引我得多，复杂的玩法会让我因为看不到故事而焦躁……</p><p>就算文字游戏是一个可能快要死掉的形式也很喜欢。我喜欢文字游戏特有的叙事方式，喜欢声优们的精彩演出，喜欢画师赋予角色们的鲜活容貌。习惯于这个恰到好处的幻想空间并对此感到舒适。</p><p>而比起一边与他人讨论一边看故事，我更愿意自己一个人自闭地看……一方面，我的阅读习惯比较排他，我偏好速读、遇重点回读，但是对别人未必如此，可能只能看到我不断地切过句子；另一方面，就是单纯地没有那么喜欢说话（）所以直播我玩文字游戏的过程对于观众来说是非常无趣的。而从我的角度而言，我也更希望观众自己去玩这个游戏而不是看我玩。</p><p>并且，很多文字游戏其实是不太方便直播的。对文字游戏来说，故事就是绝大多数了，不像是玩法取向的游戏、看了玩法会觉得想要自己去玩，有的片段看了确实影响体验的……而且有一些非官方翻译等等都是不允许公开流出的，我对那些为爱发电的汉化组非常感谢和佩服，不想违背他们的意愿。</p><p>唱歌什么的倒也是可以的啦，但是我会的曲子没有那么多也唱不了很久，一直播的话就会很多重复……（另外我觉得我的麦也不是很好x）</p><h3 id="2"><a href="#2" class="headerlink" title="2"></a>2</h3><p>另一方面是<strong>我这个人的固执</strong>（）。</p><p>这个就在下面的聊天记录里说得很明白了……说到想做直播的初衷，也只不过薅叔叔的百来块钱羊毛罢啦。所以几乎是无准备无了解地进入了这个领域（……）</p><p>现在渐渐意识到：</p><blockquote><p>:想着 什么不认识的人也会喜欢 这种做法就感觉很不舒服<br>:没有做教程的时候想 什么不认识的人可能也会有帮助 那么纯粹</p></blockquote><p>至少我觉得我不能做得到，或者说我本来在三次元中都不算个什么讨人喜欢的人……</p><p>可以说社恐的很大一部分成因就是过强的自我意识，正因如此，即使在二次元我也不能做到开着直播和关了直播一个样地摸鱼（）</p><blockquote><p>友:\=\=推得咋样了（）<br>:没怎么管（x<br>:放养中<br>友:笑死<br>友:三天打鱼两天晒网捏（）<br>:是这样的（<br>:比如我现在就不想播了<br>:我已经开始觉得很无聊了（<br>友:xs<br>友:但是 感觉 现在有这个群<br>友:是不是就会<br>:影响我<br>友:有点上班似的压力<br>:对<br>:呜呜 我还是不该建这个的<br>友:不过他们话这么多（）<br>:应该我不播了就少了吧（<br>友:难说<br>友:可能直接把主包踢了自立门户（）<br>友:已经是成熟的水友了 涩图吊图技术一样不落<br>:确实……主包常年状况外<br>:我觉得我还是喜欢自闭地一个人打点没人玩的单机游戏<br>:而且我也不是很喜欢一边打游戏一边说话<br>友:害<br>:所以我也没什么可播的其实<br>友:感觉尝试这种东西<br>友:还是要留点退路（）<br>:是这样的（<br>:反正等两个陌生水友的舰长到期了我就自由了<br>:大爷，，那无所谓的<br>友:笑死<br>友:老头地位（）<br>:是这样的<br>:然后我想我确实对奇怪的人容忍度极低<br>:=。=<br>:属于看了就糟心的那种<br>:不如自闭<br>友:确实<br>:而且一些群友一副自来熟的样子<br>:呃<br>友:确实<br>:我有点难绷<br>:可能V圈是这样吧<br>友:有点太社牛了<br>:但是对我 不熟就是不熟啊。。<br>:在我这就是感觉。。啊啊啊<br>友:确实有点（？）<br>友:怎么说呢<br>友:戏子的感觉吧<br>友:就是要去取悦他人<br>:感觉还是不一样的<br>:开直播打游戏和自己自闭打游戏<br>友:尤其是有利益关系之后<br>:是这样的<br>:而且肯定主要还是白嫖的啊<br>:我今天看了几个V的那种切片<br>:就是 主播你能不能只露出眼睛然后点头（<br>:草<br>友:确实<br>友:那个<br>:我现在真觉得V圈是…<br>:我也很难理解有些妹子在皮套后面说这种话之类的是怎么想的<br>友:V圈搞软色情不是一天两天了（）<br>:玩弄阿宅的心情很有趣是吧（主要还是有利吧<br>友:也不一定吧<br>友:生活所迫可能就麻木了<br>:我不理解（大声<br>:不过说实话<br>:光好看皮套就能千粉<br>:V圈基数是在这<br>友:确实<br>:我已经不知道我想搞什么了<br>:其实这个粉丝基数可能是可以做一点好玩的试试的<br>:但是一想到是取悦的性质我就觉得挺恶心的（<br>友:怎么说呢<br>友:不开心就别做<br>:确实是<br>友:只能说钱不好挣a<br>:确实~<br>:还是好好写代码<br>友:好好学习好好搞钱<br>友:好好搞男人（）<br><strong>:想着 什么不认识的人也会喜欢 这种做法就感觉很不舒服<br>:没有做教程的时候想 什么不认识的人可能也会有帮助 那么纯粹</strong><br>友:确实<br>:可能普通人就是这样吧x<br>友:目的变了就很不一样了<br>:呜呜<br>友:希望别人喜欢。。。这种感觉真的很卑微<br>:是的是的<br>:希望别人有帮助的话 可以说是平等甚至有点上位的<br>友:确实<br>:还是自己开心最重要<br>友:感觉实在不行得玉玉跑路（）<br>:笑死，太懂了<br>友:我有点理解了<br>:但是我真觉得我要是每天需要考虑播什么<br>:我真的会玉玉的<br>友:为啥这么喜欢玉玉这个说法<br>:因为我本来就不是很擅长和别人相处的类型<br>友:确实<br>:今天我在群里脾气都有点控制不住了<br>友:花心思讨好别人真的很累啊<br>:但我这脾气注定没办法和很多人都好好相处吧（<br>:也就亲友们能忍忍我了233<br>友:感觉主包是一个很奇怪的地位<br>友:看起来是在上位<br>友:但又是观众的服务者<br>:其实是在下位<br>友:就很<br>:主包一旦说错话都是要被吊起来的<br>友:哎<br>友:确实<br>:比如说什么Vtb不就是…什么的<br>:我敢往b站上发明天估计就被冲烂<br>友:确实<br>:我不知道别的套皮人套皮播的时候是不是觉得这个事情很开心呢<br>友:“享受了流量的红利就要接受流量的反噬”<br>:反正对我来说就是…，渐渐意识到是在干嘛以后就只会觉得压力很大了<br>:…普通人还是别轻易尝试了（<br>:而且很难说做到心态上完全不在意别人感受的直播<br>:就是只要有这个行为了就会产生表演意识<br>:害害 已经搞不懂啦<br>友:害<br>友:以前觉得当V恰恰米挺容易的<br>:感觉以前（几周？）的想法有点理想化<br>:我也是这么想<br>:可能就是声音好听然后卖卖萌<br>:<strong>但是我现在觉得卖卖萌这种事本来就不是普通人自然而然地能做到的</strong><br>友:哎<br>友:感觉真的挺折磨的<br>:我现在速润<br>友:确实<br>:幸好投入还没有很多<br>:还是做我的冷冷清清的自闭文字游戏博主<br>友:虽然感觉现在已经挺难收场的了<br>友:但是已经是最好的结果了<br>:还好，要是一周一回唱个歌我还是能接受的（<br>:至少唱歌的时候不用考虑说什么话<br>:毕竟我还有个皮套，不用总感觉亏了（草<br>友:笑死<br>:我的兴趣都没支撑到我皮套做完<br>:草死了<br>友:沉没成本这就来咯（）<br>:沉没成本这就来咯（）<br>友:害 憋想了<br>:嗯嗯嗯<br>友:摆一天是一天<br>:你陪我理一下思路感觉想清楚很多了<br>友:摆到日子就差不多了<br>:本来觉得挺烦的<br>友:嘿嘿<br>:嘿嘿</p></blockquote><h3 id="3"><a href="#3" class="headerlink" title="3"></a>3</h3><p>其实心情有点类似和我爸说要退出致远荣誉计划（类似重点班）的感觉</p><p>就是，我能预期到我爸一定会说好，会支持我的决定，可是我也知道他到底怎么想</p><p>我觉得我现在如果说啊啊不干了（可能是）喜欢我的大家的想法……（说是大家其实也没几个人啦）支持肯定是支持，除了我自己没人能强制我继续做这件事情的</p><p>群我也不知道该怎么处理好，就先这样吧……</p><p>让大家陪伴我任性一场，非常不好意思哦。（）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;0&quot;&gt;&lt;a href=&quot;#0&quot; class=&quot;headerlink&quot; title=&quot;0&quot;&gt;&lt;/a&gt;0&lt;/h3&gt;&lt;p&gt;开始觉得有点无聊和烦躁了，故.,.（大量删减的聊天记录在2#）有亲友陪着我真的太好了！&lt;/p&gt;
&lt;p&gt;不能说是完全没有套皮出道试试的想法吧，但是发现</summary>
      
    
    
    
    <category term="Daily" scheme="https://float0108.github.io/categories/Daily/"/>
    
    
  </entry>
  
  <entry>
    <title>咎狗之血</title>
    <link href="https://float0108.github.io/Tavg/RoseR/ff3273f7.html"/>
    <id>https://float0108.github.io/Tavg/RoseR/ff3273f7.html</id>
    <published>2023-01-12T14:50:02.000Z</published>
    <updated>2023-01-21T19:35:12.223Z</updated>
    
    <content type="html"><![CDATA[<h2 id="无剧透篇"><a href="#无剧透篇" class="headerlink" title="无剧透篇"></a>无剧透篇</h2><ul><li>简评：带点灰暗的血腥气的幻想故事</li><li>推荐：4/5</li><li>标签：战争/暴力</li><li><p>Infomation: <a href="https://zh.moegirl.org.cn/%E5%92%8E%E7%8B%97%E4%B9%8B%E8%A1%80">MoeLink</a></p></li><li><p>CV List：</p></li></ul><div class="table-container"><table><thead><tr><th>姓名</th><th>声优</th><th>角川译名</th><th>身高</th><th>年龄</th></tr></thead><tbody><tr><td>Akira</td><td>先割れスプーン(鸟海浩辅)</td><td>明</td><td>172cm</td><td>18~19岁</td></tr><tr><td>Shiki</td><td>绿川光</td><td>式</td><td>188cm</td><td>21~24岁</td></tr><tr><td>Keisuke</td><td>何武者(杉田智和)</td><td>启介</td><td>178cm</td><td>18~19岁</td></tr><tr><td>Rin</td><td>鬼龙院隼人(福山润)</td><td>凛</td><td>154cm</td><td>-</td></tr><tr><td>源泉</td><td>一条和矢</td><td></td><td>183cm</td><td>40岁+</td></tr><tr><td>NANO</td><td>Prof.紫龙神谷浩史(山崎巧)</td><td></td><td>182cm</td><td>-</td></tr><tr><td>Yukihito</td><td>神谷浩史</td><td></td><td>178cm</td><td>21~24岁</td></tr></tbody></table></div><ul><li><p>一些：<br>  如果说甜池围绕着异形和宗教、探讨人的爱与非人的爱，那么这部就是围绕着战争和暴力，探讨罪与罚（？）……<br>  甜池给读者的感受像输液管里的药液一点一点流进血脉里，有细微且微妙的凉意，而咎狗是更加直接的，直接哐哐哐几拳砸向读者的脑袋……是的，血腥和暴力是几乎无法排解的主调。</p><p>  在体验过这一部作品之后，感觉对这位剧本娘的作品有了更多的认识。她的世界都是那么特别，弥漫着微妙的氛围感——她太懂得怎么去制造一个这样的世界了~&gt;w&lt;=</p></li></ul><h2 id="剧透篇"><a href="#剧透篇" class="headerlink" title="剧透篇"></a>剧透篇</h2><h3 id="关于角色们"><a href="#关于角色们" class="headerlink" title="关于角色们"></a>关于角色们</h3><p>战争背景下的大家都好麻木好冷漠好血腥好暴力——啊啊啊——你们怎么几乎都不做润滑（怒）小明好可怜</p><p>中间最柔软最细腻的一个大概是启介，结果启介也是一把螺丝起子直接捅穿天际，我趣，真的痛啊。。。。啊啊啊啊啊啊。。。。</p><h4 id="小明"><a href="#小明" class="headerlink" title="小明"></a>小明</h4><blockquote><p>陷入永远的，沉眠。这就是所谓的………「死亡」吗?<br>只是这样吗？也许，就只是这样而已。<br>并没想过要死。<br>但，对生存也不抱有特别的感慨。哪怕某天早上，突然就死去，那样也无所谓。<br>『不想死』，若如此强烈地期望的话一—那么，又要为了什么而活着?<br>除了身体的机能停止以外，「生」与「死」之间，又有什么差别?<br>再多的考虑也没有结果。</p></blockquote><p>明公主（双手合十）~</p><p>哎其实我刚开始也搞不明白大家为什么管他叫明公主哎，比起来说我觉得甜池的蓉感觉公主多了，毕竟蓉纤细敏感又疏离，明看上去不太一样……要命，我一旦想要分析，我觉得二者又有很多相似的地方。他们都是那种仿佛漂浮在世间一样的人，……蓉司更明显地处在迷茫中，因为他既无法融入人类社会的正常交往又不愿意服从那些东西的支配，小明则大多数线里完全没进过这个状态（）</p><p>简单来说，小明和蓉司都能“感觉”到许多东西，蓉司困在琐碎的思绪中无法迈向他人，那些琐碎的思绪形成了他与外界的隔音墙，而小明是完全不去“感受”、“思考”这些东西，和感性的柔软的东西好像有一层可悲的厚障壁……挚友的生命也只是让他稍稍多理解了一点挚友在于不在的差别、人类生与死的差别。大概是这种东西，造就了他们相似又不同的隔阂感吧。</p><p><del>我觉得这种0好带劲啊！呜呜呜呜呜，虽然我也很喜欢看上去软乎乎的小0，但是看上去好冷漠的不爱想的声音也1里1气的小0也好可爱啊！</del>（？在这理发店）</p><h4 id="启介"><a href="#启介" class="headerlink" title="启介"></a>启介</h4><p>我草起子哥你不要过来啊（害怕）</p><p>哎，怎么说呢，我好像能理解两方的心情。不过我还是觉得启介不应该去那个地方的，真的不适合他……小明一开始的生气我非常非常理解，我都自身难保了还要带一朵脆弱的娇花，娇花的正义让我甚至都不好意思动手（转头）</p><p>至于故事染了血以后，唉……</p><p>…………启介你要好好赎罪啊。……</p><h4 id="式"><a href="#式" class="headerlink" title="式"></a>式</h4><p>故事到这里一下子字母了起来！男人，你怎么能直面如此强大的我，真是太有趣了，看我不把你腿打断了</p><p>感觉是一个超级加强版总裁戏（？）</p><p>大火炖肉很猛，很有这个作品一贯的风格……但是说实在的几个结局我都不太喜欢，啊啊啊啊啊啊，我完全代入普通人视角，式哥直接军国统治我觉得好害怕……</p><p>以及那个感觉可能有点OOC的诱0结局，剧本娘好会写啊，瑟飞了啊啊啊啊啊（啸叫）</p><h4 id="凛"><a href="#凛" class="headerlink" title="凛"></a>凛</h4><p>他追他逃他插翅难逃（什么）</p><p>我愿称小明为一种天使，他在努力地弥合小凛支离破碎的心。不过，就算是因为和前男友长得像，小凛对小明真的很好，在这个黑暗的地方帮了他很多的忙、保护了小明，同时也保护了小明的善良，说不感动也是假的。</p><p>说来也是缘分吗，对式的执念支撑着凛，对Nano的执念支撑着式，还真是兄弟俩啊。然而，式仿佛从一开始就是强大而不在意手段的存在了，而凛是从天真一点一点走向绝望，……（或许式也有被磨练的契机吗……）</p><p>结局很理想，但是很甜。我就是喜欢和平社会嘛qwq</p><h4 id="源泉"><a href="#源泉" class="headerlink" title="源泉"></a>源泉</h4><p>全游戏对男主最好的一位了，几乎没怎么折磨过男主，至少身体上……</p><p>精神上就另说了，源泉一直被对儿子的死亡、对自己所参与的实验的真相的悲哀、后悔和恨意所囚禁着，所以在别的结局也是，只要知道了男主的真实身份就会想要除掉了事（啊啊啊说到底军方是怎么放心男主这种重要的实验资料跑到外面去的呀，一不小心就BE了）</p><p>不过在这个结局里，男主强调了他和Nano在实验中同样的被害者的身份、强调了他们的情感，软化了源泉的态度。唉，其实源泉本来也不是那么偏执的人，明明也很重感情。</p><p>（明明是个有儿子的异性恋，哼哼哼qwq）</p><p>没忍住私藏几段摘录。大叔真的很懂小明。不过小明确实是这个性格……他可能确实是这么想的，但是有些东西他不会或者不能进行什么有形的思考，喜欢而无法知晓、难以诉说，痛苦而无法自察、难以纾解……</p><blockquote><p>源泉悠然地笑着、大口地吞云吐雾。<br>源泉<br>    每次来到教堂、我都会觉得比起神来、人类更厉害。怎么说呢、人类比较有潜力<br>明<br>    潜力?<br>源泉<br>    啊啊。从远古开始人类就信奉着神明、也因为那强烈的信念、而完成了这样的建筑。你可以确认神的存在吗?<br>明<br>    ……不能<br>源泉<br>    对吧？不能确定也无法判断。<br>    明知如此、还是不停地为了祂去建造会面的场所、即是教堂」<br>源泉将香烟夹在指缝中、用手指轻敲着椅子。<br>少许的烟灰掉了下来、当然、他对此毫不在意。<br>源泉<br>    所谓的执念、在某种程度上是很恐怖的<br>    人的意念可以超越时间、唤起很多人的共鸣、现在也一样。经常可以听人说、虽然并不相信、但是很喜欢<br>确实、虽然今天是明第一次来教堂、而且还是这么破败的地方、却觉得很放松。</p><p>源泉<br>    我可不是要你向神明祈祷。<br>    倾诉是人最简单的本能、却异常地重要。<br>    所谓语言的东西、虽然肉眼看不见、但却是有着真实的形态。既可以积在胸口、也可以积在肚子里、然后变成凶器。<br>明<br>    凶器？<br>源泉<br>    嗯。<br>语言通过声音传达、并非肉眼可见。怎会变成凶器呢。<br>源泉<br>    话要是留在肚子里、就可能变为凶器。若积在胸中、那又是另一个问题了<br>明<br>    肚子？<br>源泉<br>    肚子<br>就是这里、源泉用下巴指了指明的腹部。不知是不是错觉、胃部感到一阵奇妙的异样。<br>源泉<br>    因为语言是有生命的。要是堆在那里就会不断地腐烂。腐烂的东西不能被身体消化、只会使你的身体变得急躁<br>    身体的急躁又会带来心理的焦躁不安。所谓言之于身、气之于心嘛。这些都是环环相扣、息息相关的。……对吧、明<br>源泉的眼神依然很沉稳。<br>源泉<br>    所谓说话、就是不需要考虑说什么、或是希望对方听到什么。只要将大脑里的东西原原本本地搬到外面来、自然便成了语言<br>    如果一直不说、便会越来越沉重。<br>    因为这是人类的本能。</p></blockquote><h4 id="Nano"><a href="#Nano" class="headerlink" title="Nano"></a>Nano</h4><p>神明一般的男人（感叹）我不是很理解就是了</p><p>对男主的态度让我无端想起了O社Paradigm Paradox的大boss，一样的那种“我与你是相似的存在”的独一无二的共鸣感，正因如此我会很重视你的话语……呜呜，在这一点上两部作品的表现都挺不错的！</p><h3 id="别的"><a href="#别的" class="headerlink" title="别的"></a>别的</h3><p>过得有点久了写得好粗糙，寒假看的故事太多了，有点怠惰于写repo，拖着拖着果然还是慢慢在忘掉啊……不想拖到年后啊！啊啊啊啊啊</p><p>这个故事并不太复杂，小明重复多次发现真相的过程比较枯燥，去掉这些的话剩下的东西也就比较少了，所以想要说很多也不知道从哪说起，感觉更多的是大家靠剧本娘一些很有深意的文字继续往下挖掘的东西。……相比来说，甜池就是几乎单线走到底，不会有这个问题。</p><p>嗯，总之，给我的感觉没有甜池那么深刻也是确实的事情啦。也可能，是不是某种意义上，战争下人们的异化比起异化的人对我来说更遥远呢？（沉思）</p>]]></content>
    
    
    <summary type="html">4/5 带点灰暗的血腥气的幻想故事</summary>
    
    
    
    <category term="Tavg" scheme="https://float0108.github.io/categories/Tavg/"/>
    
    <category term="RoseR" scheme="https://float0108.github.io/categories/Tavg/RoseR/"/>
    
    
    <category term="N+C" scheme="https://float0108.github.io/tags/N-C/"/>
    
  </entry>
  
  <entry>
    <title>无法打开的黑与金之匙</title>
    <link href="https://float0108.github.io/Tavg/SakuraR/e8c6562f.html"/>
    <id>https://float0108.github.io/Tavg/SakuraR/e8c6562f.html</id>
    <published>2022-12-31T07:26:03.000Z</published>
    <updated>2023-02-15T08:43:24.213Z</updated>
    
    <content type="html"><![CDATA[<h2 id="无剧透篇"><a href="#无剧透篇" class="headerlink" title="无剧透篇"></a>无剧透篇</h2><ul><li>简评：一部非常细腻的校园恋爱剧</li><li>推荐：4-/5</li><li><p>标签：校园/R</p></li><li><p>简介：自闭家里蹲少女某日因梦中的契机走出了家门，剪掉长长的刘海开始了普通的校园生活~</p></li></ul><p>（*女主有配音w）</p><ul><li>总评：<br>  取材其实比较古早（x）但是很细腻、完成度也很高，一些小甜品一直被人写来写去就是因为真的好萌（嘿嘿）另外，虽然古早但是画风非常非常好看！！<br>  结局很多，每个线有GoldEnd GoodEnd BadEnd BlackEnd，小火炖肉也很香很自然、没有为写而写的感觉，黑化结局也是真敢写……<br>  完成GE之后才会解锁Gold和Black，这时需要从头来一遍，可以看到很多和男主们内心戏有关的新剧情~<br>  *个人非常非常萌弟弟线（放心不是亲弟弟嘿嘿），喜欢弟弟系的可以冲冲看呀！（x）</li></ul><hr><h2 id="剧透篇"><a href="#剧透篇" class="headerlink" title="剧透篇"></a>剧透篇</h2><p>期末考期间开始打和打完的，就没写repo，放假了又猛玩新的，完全忘了这个事情了。总之就是很香，不过也特别到我觉得不玩就缺少什么（没有什么特别的格局？就是校园恋爱剧罢了x）</p><h3 id="关于角色"><a href="#关于角色" class="headerlink" title="关于角色"></a>关于角色</h3><p>（按翼梦攻略中的顺序）</p><h4 id="园村郁人"><a href="#园村郁人" class="headerlink" title="园村郁人"></a>园村郁人</h4><p>啊啊啊啊好萌好萌好萌好萌哇！！（打滚）第一条就打了，差不多这个游戏的真相也全解开了？（关于打开少女心扉的哥哥什么的x）至于黑钥匙金钥匙什么的，呃，就当是个数值条就好了~</p><p>弟弟真的一直都很照顾女主呢，给她做好吃的（kksk）让她走出自闭的小房间还想要帮姐姐找到爱情。私心里觉得是担心自己对女主的亲情变质所以快点把姐姐嫁出去好让自己定死在弟弟役上（悲）……新增的剧情里也可以看到弟弟是在自己的线里和女主多接触了才产生恋爱的火花的呢~！所以还是不会让我太心疼弟弟会不会在别的角色的线里喜欢我（）</p><p>想要弟弟不要崩坏掉还是要给弟弟足够的安全感吧。调戏弟弟但是又不喜欢弟弟，或者喜欢弟弟又不愿意接受，这种事情都是不被允许的噢！虽然半夜来说悄悄话有点那个，但是作为R18游戏的话好像也不算很离谱……（啊这种事也就郁人做起来比较自然吧！如果是因为亲情所以担心，然后来说悄悄话的角色变成父母之类的好像就毫无萌感了，呜呜）</p><p>最喜欢的也就弟弟线啦~后面都没有给我这么大的触动qwq反而我倒是一直在别人线里看着可爱的弟弟~~嘿嘿！会打开门把我从莲井小黑屋里救出来的弟弟，会因为须藤打了我然后超级生气帮我去找场子的弟弟，会帮我试探欺负我心情的绀野的弟弟~~什么别的角色！根本不喜欢！只不过是让我更加喜欢弟弟的铺垫罢了！弟弟~弟弟~！弟弟~~！！！！！！</p><h4 id="莲井智臣"><a href="#莲井智臣" class="headerlink" title="莲井智臣"></a>莲井智臣</h4><p>我趣！你PUA我！（。）大概是不太喜欢的类型所以萌不起来吧……</p><p>有个特别相近的角色，倒是，灰姑娘玻璃鞋的纶灯，把女主角当作美丽的玻璃标本一样处理（）美丽的少女作为一种美丽的物品……多少有点……恐怖……（。）</p><p>只为你一人而开的理发店。房间里无数的与你长得一模一样的模型。……女主角闯进去的时候的感受，恐怕和玻璃鞋的女主角推开门看到全都变成玻璃的人类的感受差不多吧。甚至不需要对你隐瞒，你知道也无所谓，因为你是我的东西（。）或者说其实希望你知道，因为这才是真实的我——心里多少有那么一点孤独寂寞渴望被看到被理解的心情吧。</p><p>但是我是真接受不了啊（……）</p><p>就算是Good和Gold也无法绕开的，让男主渐渐意识到女主爱着这样的他无论如何也不会离开他的痛苦的过程。好可怕啊……</p><h4 id="须藤透央"><a href="#须藤透央" class="headerlink" title="须藤透央"></a>须藤透央</h4><p>恐怕是一种泰迪转世（。）同样的深深的自卑敏感寂寞，但是表现和上面那位完全不同。上面那位从控制中获取安全感，这位则是从……，不过这都是占有的形式也没错啦。</p><p>还有一个区别，就是上面那位是已经有很高的专业水平、算得上功成名就而隐退中的艺术家，这个还只是个孩子，甚至正在因为家里的经济问题而面临不得不和小女朋友分离、回老家上学。他说，上学什么的都无所谓了，你也不要在意那些了，只要和我在一起就好了。</p><p>两位恋爱的样子完全就是一种激进的年轻情侣，整天黏黏糊糊耽误学业，如果女主说不想耽误学业那就会影响感情……啊啊，好可怕……你还是让我读完书吧……虽然乙女游戏里可能是有完美的爱吧，但是放现实里这位根本是在逼迫女主放弃人生所有的可能性选择与他的恋情啊，这是我无论如何也无法接受的（我是无法对谁产生绝对的安全感的类型……）而且还没法沟通，甚至使用暴力……</p><p>对女主那边，为了透央，自说自话地去当陪酒女，我感觉很麻，也不想评价。……反正我要是透央我肯定气坏了，就算是普通的学生情侣对这种事也……透央正处于家庭危机，一想到自己逊到要女朋友去做这种事肯定爆炸（虽然我觉得你不应该对着女朋友爆炸，应该好好反省自己），女主没考虑到这个问题让我也觉得有点无奈。</p><p>要我说还是先好好读书吧（。）而且！回个老家分离一段时间就那么恐怖吗！！！！你们不是可以发短信的吗，啊啊啊啊啊这世界上甚至有网恋的啊！要是再忍个几年社交网络都发明出来了！……</p><h4 id="绀野千纮"><a href="#绀野千纮" class="headerlink" title="绀野千纮"></a>绀野千纮</h4><p>看上去很温柔。为了满足恋人不顾一切。但是这种不顾一切是恐怖的，因为他仿佛把自己定位成为了满足对方需求的存在一般……即使他并不愿意去理解对方真正的需求。</p><p>我很难理解这种不需要不愿意去理解对方的爱。……他感受不到对方的困扰和痛苦吗？</p><p>Black更是离谱（。）</p><p>怎么说呢，我觉得师生恋被忌惮完全是有道理的，因为通常来说师生之间存在着一些年龄地位学识之类的东西的差距，这些差距很容易让青春期的下位者感觉到模糊的憧憬、甚至喜欢的感情，这种感情有多稳固多容易褪色先不说（要说青春期的很多感情不都也是风一吹就会散掉的东西吗，即使曾经有过热烈的时间），……上位者想要利用这种东西太过于容易了……虽然状况不太一样，但是会让我想起来房思琪的初恋乐园。</p><p>更何况绀野本来就是被前女友已经认证过的地雷男（……）</p><h4 id="女主角"><a href="#女主角" class="headerlink" title="女主角"></a>女主角</h4><p>其实刚开始的时候我感觉到了高度的共鸣，作者应该是真有过类似的自闭阶段吧。我还挺相信文字的。……就是那种，不想见到任何人，不想和任何人交谈，对任何的人际交往感觉到沉重和困扰，有高度的自我意识和某种程度上的自卑、对他人的目光感觉到敏感和恐惧，之类的感觉……啊啊啊，完全能共情到，那一刻我就想，啊这游戏我开对了，期末考试周就该玩这个！（？）</p><p>呃，但是后面就没这么共情了，因为她也走出去得太快了吧（）……我趣，你是怎么能做到一星期就变成正常人，太离谱了……甚至，不擅长不喜欢人际交往的你还能举起手主动要求要参与一个跨校大活动的组织，救命啊，我单是想想都觉得毛骨悚然啊……</p><p>可能女主在自闭前和我就不是一类人吧，所以恢复得也不太一样……我现在还在半社恐阶段呢，在奶茶店做不到和柜员点单只愿意看微信的那种类型……啊啊啊……而且女主她是真好看啊！稍微打理一下走到街上就会被搭讪的类型，我就真的非常普通啦（悲）</p><p>说多了x</p><p>后面进个人线以后的女主我都比较无感，比较典型的日系乙女游戏女主角的类型了，有点软弱但是爱得很坚定，蛮普通的（。）有些男主的所作所为匹配上女主的爱，时常让我觉得：你喜欢他哪啊！！！</p><p>把女主角写的没特色也有这个问题，容易让我同时对男主也产生困惑：除了她好看，你还喜欢她哪啊！！！</p><p>不要都用なんとなく糊弄啊！</p><p>要说是弟弟役还能解释，男主们中的很多和女主认识得不久、甚至连交集都没多少呢。</p><p>……还有女主之前到底经历了什么啊能不能解释一下呀……别的完成度都很高，我觉得这个理应说一说的……</p><h4 id="别的"><a href="#别的" class="headerlink" title="别的"></a>别的</h4><p>也就这些吧（）现在想来也是比较普通的一个游戏，只能说是在剧情范围内做到了很流畅很细腻很完善啦，毕竟这么普通的背景真的相当考研作者的编排和描写，不然会让人觉得很无聊。有一些游戏会依靠复杂繁琐的元素和设定制造剧情矛盾，让故事发展能够被比较轻松地掌握，而这样的游戏就只能纯靠作者对人心的精妙把握。（鼓掌！）足以看出剧本的功力相当到位&gt;w&lt;</p>]]></content>
    
    
    <summary type="html">4-/5 一部非常细腻的校园恋爱剧</summary>
    
    
    
    <category term="Tavg" scheme="https://float0108.github.io/categories/Tavg/"/>
    
    <category term="SakuraR" scheme="https://float0108.github.io/categories/Tavg/SakuraR/"/>
    
    
  </entry>
  
  <entry>
    <title>沧海天记</title>
    <link href="https://float0108.github.io/Tavg/Flos/dafa11a.html"/>
    <id>https://float0108.github.io/Tavg/Flos/dafa11a.html</id>
    <published>2022-12-26T14:50:02.000Z</published>
    <updated>2023-01-02T14:01:45.772Z</updated>
    
    <content type="html"><![CDATA[<p><img src="assets/2022122622435400.jpg" alt=""></p><h2 id="无剧透篇"><a href="#无剧透篇" class="headerlink" title="无剧透篇"></a>无剧透篇</h2><p>推荐：3/5<br>简评：少年的羁绊与神明的羁绊<br>篇幅：不会继续玩了。两条线约12h</p><p>Caution：</p><ul><li>描写男性之间的友谊和羁绊的意思就是真的是友谊和羁绊，不是指女性向分类下属的蔷薇向（。）一点擦边都没有的那种（啊啊啊啊我没法理解一个没有恋爱线的游戏有好感度机制！！）</li><li>决战描写非常的有很多乙女向文字游戏的风格，特点就是非常的回合制，非常的二，非常多的谜之静止帧</li><li>单一主线，根据好感度不同会进入和不同伙伴共同战斗的分支结局，总体上差别不大。不过这条主线写得非常有趣，让玩家甚至无法猜测到下一步会发生什么。</li></ul><p>打完感觉人已经没有感觉了，这到底是怎么回事呢，原来有人打之前根本就没有注意什么叫做真正的女性向——原来就是真正的一点恋爱都没有的意思啊！博主打着打着都要掉小珍珠了……</p><h2 id="剧透篇"><a href="#剧透篇" class="headerlink" title="剧透篇"></a>剧透篇</h2><p>我真的是忍不了！拜托！你那决战写的是什么东西！？如果有人倒下了，邪神就在旁边看着所谓正派几个人磨磨唧唧一会然后几个人若无其事地继续回合制……邪神完全不够邪好吧，直接挨个击破不行吗，几个小孩就在你的家里乱窜你怎么可能不知道……</p><p>还有你那几个情感丰富的神，太好了，除了邪神，太阳神一家三口我是几乎一点神性都感受不到，这波，这波是人类直接被太阳神一家三口的优柔寡断拖死了……傻白甜月读和他的傻白甜哥哥天照，被邪神忽悠的一愣一愣的就好像没有大脑，哦对你们神是不是确实没有大脑，不好意思啊。</p><p>考虑到神话背景，就不吐槽把神的力量远远写在凡人之上了。主要是这就会有一个问题，我一直很在意这种问题，尤其在花女王里面特别生气地写过，你这样战斗平衡很容易就做得稀巴烂，因为强度完全就是剧本娘一支笔……为了让几个十几岁的凡人小孩能够参与神明的战斗，特意给他们每个人分配了一个没有脸的神作为庇护，……事实上也确实是做得稀巴烂就是了。</p><p>还有让人火大的ナギサ，摘了尸鬼耳朵做实验。不行真的会有点恶心到我，我当时对着尸鬼割自己耳朵的战斗画面咳咳咳狂吐，……ナギサ看起来蛮正常的一个小孩，怎么玩这么大……</p><p>以及茶褐色外套的哥们的谜之立场。救命，你怎么能做得到一会儿好人一会儿又能超狠心做坏人，刚刚还是要干死主角的样子，一会儿又觉得可以可以大家一起去干掉邪神吧。我能理解剧本娘的意思是间谍哥顾及到家族的安危，可是这写的变化也太过于莫名其妙，让我感觉这哥们完全没有自己的决心，……说起来，哥们你和小鬼还不是一代人呢，我看小鬼们就是看弟弟的感觉，可这哥们年纪比我还大啊（x），感觉完全就是捉摸不定又不太懂事的状态……</p><p>不过嘉隆老师是真的顶。（双手合十）愿主能够原谅你们的罪孽。</p>]]></content>
    
    
    <summary type="html">tbc</summary>
    
    
    
    <category term="Tavg" scheme="https://float0108.github.io/categories/Tavg/"/>
    
    <category term="Flos" scheme="https://float0108.github.io/categories/Tavg/Flos/"/>
    
    
  </entry>
  
</feed>
